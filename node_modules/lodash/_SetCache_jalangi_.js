J$.iids = {"8":[15,14,15,28],"9":[1,16,1,23],"10":[14,17,14,19],"16":[18,12,18,28],"17":[1,24,1,37],"18":[15,14,15,28],"25":[1,16,1,38],"26":[18,12,18,19],"33":[2,15,2,22],"41":[2,23,2,39],"42":[18,12,18,28],"49":[2,15,2,40],"57":[3,15,3,22],"65":[3,23,3,39],"73":[3,15,3,40],"81":[1,16,1,38],"89":[1,16,1,38],"97":[2,15,2,40],"105":[2,15,2,40],"113":[3,15,3,40],"121":[3,15,3,40],"129":[14,18,14,19],"137":[15,14,15,20],"145":[15,24,15,28],"153":[15,31,15,32],"161":[15,35,15,41],"169":[15,35,15,48],"177":[14,17,14,19],"185":[14,17,14,19],"193":[15,14,15,48],"201":[15,14,15,48],"209":[17,5,17,9],"217":[17,25,17,33],"225":[17,21,17,35],"233":[17,5,17,35],"241":[17,5,17,36],"257":[18,14,18,19],"265":[18,12,18,19],"273":[18,22,18,28],"281":[19,9,19,13],"289":[19,18,19,24],"297":[19,25,19,30],"305":[19,18,19,31],"313":[19,9,19,32],"315":[19,9,19,17],"321":[19,9,19,33],"329":[13,1,21,2],"337":[13,1,21,2],"345":[13,1,21,2],"353":[13,1,21,2],"361":[13,1,21,2],"369":[24,1,24,9],"377":[24,1,24,19],"385":[24,26,24,34],"393":[24,26,24,44],"401":[24,52,24,63],"409":[24,26,24,63],"417":[24,1,24,63],"425":[24,1,24,64],"433":[25,1,25,9],"441":[25,1,25,19],"449":[25,26,25,37],"457":[25,1,25,37],"465":[25,1,25,38],"473":[27,1,27,7],"481":[27,18,27,26],"489":[27,1,27,26],"497":[27,1,27,27],"505":[1,1,27,27],"513":[1,1,27,27],"521":[1,1,27,27],"529":[1,1,27,27],"537":[13,1,21,2],"545":[1,1,27,27],"553":[15,14,15,48],"561":[18,5,20,6],"569":[13,1,21,2],"577":[13,1,21,2],"585":[1,1,27,27],"593":[1,1,27,27],"nBranches":4,"originalCodeFileName":"/home/james/nodejs/HiPar/node_modules/lodash/_SetCache.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/node_modules/lodash/_SetCache_jalangi_.js","code":"var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\nmodule.exports = SetCache;\n"};
jalangiLabel648:
    while (true) {
        try {
            J$.Se(505, '/home/james/nodejs/HiPar/node_modules/lodash/_SetCache_jalangi_.js', '/home/james/nodejs/HiPar/node_modules/lodash/_SetCache.js');
            function SetCache(values) {
                jalangiLabel647:
                    while (true) {
                        try {
                            J$.Fe(329, arguments.callee, this, arguments);
                            arguments = J$.N(337, 'arguments', arguments, 4);
                            values = J$.N(345, 'values', values, 4);
                            J$.N(353, 'index', index, 0);
                            J$.N(361, 'length', length, 0);
                            var index = J$.X1(185, J$.W(177, 'index', J$.U(10, '-', J$.T(129, 1, 22, false)), index, 1)), length = J$.X1(201, J$.W(193, 'length', J$.X1(553, J$.C(8, J$.B(18, '==', J$.R(137, 'values', values, 0), J$.T(145, null, 25, false), 0))) ? J$.T(153, 0, 22, false) : J$.G(169, J$.R(161, 'values', values, 0), 'length', 0), length, 1));
                            J$.X1(241, J$.P(233, J$.R(209, 'this', this, 0), '__data__', J$.F(225, J$.R(217, 'MapCache', MapCache, 1), 1)(), 0));
                            while (J$.X1(561, J$.C(16, J$.B(42, '<', index = J$.W(265, 'index', J$.B(34, '+', J$.U(26, '+', J$.R(257, 'index', index, 0)), J$.T(249, 1, 22, false), 0), index, 0), J$.R(273, 'length', length, 0), 0)))) {
                                J$.X1(321, J$.M(313, J$.R(281, 'this', this, 0), 'add', 0)(J$.G(305, J$.R(289, 'values', values, 0), J$.R(297, 'index', index, 0), 4)));
                            }
                        } catch (J$e) {
                            J$.Ex(569, J$e);
                        } finally {
                            if (J$.Fr(577))
                                continue jalangiLabel647;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(513, 'MapCache', MapCache, 0);
            J$.N(521, 'setCacheAdd', setCacheAdd, 0);
            J$.N(529, 'setCacheHas', setCacheHas, 0);
            SetCache = J$.N(545, 'SetCache', J$.T(537, SetCache, 12, false, 329), 0);
            var MapCache = J$.X1(89, J$.W(81, 'MapCache', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, './_MapCache', 21, false)), MapCache, 3)), setCacheAdd = J$.X1(105, J$.W(97, 'setCacheAdd', J$.F(49, J$.R(33, 'require', require, 2), 0)(J$.T(41, './_setCacheAdd', 21, false)), setCacheAdd, 3)), setCacheHas = J$.X1(121, J$.W(113, 'setCacheHas', J$.F(73, J$.R(57, 'require', require, 2), 0)(J$.T(65, './_setCacheHas', 21, false)), setCacheHas, 3));
            J$.X1(425, J$.P(417, J$.G(377, J$.R(369, 'SetCache', SetCache, 1), 'prototype', 0), 'add', J$.P(409, J$.G(393, J$.R(385, 'SetCache', SetCache, 1), 'prototype', 0), 'push', J$.R(401, 'setCacheAdd', setCacheAdd, 1), 0), 0));
            J$.X1(465, J$.P(457, J$.G(441, J$.R(433, 'SetCache', SetCache, 1), 'prototype', 0), 'has', J$.R(449, 'setCacheHas', setCacheHas, 1), 0));
            J$.X1(497, J$.P(489, J$.R(473, 'module', module, 2), 'exports', J$.R(481, 'SetCache', SetCache, 1), 0));
        } catch (J$e) {
            J$.Ex(585, J$e);
        } finally {
            if (J$.Sr(593)) {
                J$.L();
                continue jalangiLabel648;
            } else {
                J$.L();
                break jalangiLabel648;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
