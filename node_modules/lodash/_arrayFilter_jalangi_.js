J$.iids = {"8":[12,12,12,25],"9":[11,16,11,17],"10":[11,15,11,17],"16":[18,9,18,39],"17":[12,12,12,17],"18":[12,12,12,25],"24":[16,10,16,26],"25":[12,21,12,25],"26":[16,10,16,17],"33":[12,28,12,29],"41":[12,32,12,37],"42":[16,10,16,26],"49":[12,32,12,44],"50":[19,14,19,24],"57":[13,14,13,15],"65":[14,12,14,14],"66":[19,14,19,24],"73":[11,15,11,17],"81":[11,15,11,17],"89":[12,12,12,44],"97":[12,12,12,44],"105":[13,14,13,15],"113":[13,14,13,15],"121":[14,12,14,14],"129":[14,12,14,14],"145":[16,12,16,17],"153":[16,10,16,17],"161":[16,20,16,26],"169":[17,17,17,22],"177":[17,23,17,28],"185":[17,17,17,29],"193":[17,17,17,29],"201":[17,17,17,29],"209":[18,9,18,18],"217":[18,19,18,24],"225":[18,26,18,31],"233":[18,33,18,38],"241":[18,9,18,39],"249":[19,7,19,13],"265":[19,14,19,22],"273":[19,14,19,24],"289":[19,28,19,33],"297":[19,7,19,33],"305":[19,7,19,34],"313":[22,10,22,16],"321":[22,10,22,16],"329":[22,3,22,17],"337":[10,1,23,2],"345":[10,1,23,2],"353":[10,1,23,2],"361":[10,1,23,2],"369":[10,1,23,2],"377":[10,1,23,2],"385":[10,1,23,2],"393":[10,1,23,2],"401":[10,1,23,2],"409":[25,1,25,7],"417":[25,18,25,29],"425":[25,1,25,29],"433":[25,1,25,30],"441":[1,1,25,30],"449":[10,1,23,2],"457":[1,1,25,30],"465":[12,12,12,44],"473":[18,5,20,6],"481":[16,3,21,4],"489":[10,1,23,2],"497":[10,1,23,2],"505":[1,1,25,30],"513":[1,1,25,30],"nBranches":6,"originalCodeFileName":"/home/james/nodejs/HiPar/node_modules/lodash/_arrayFilter.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/node_modules/lodash/_arrayFilter_jalangi_.js","code":"/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayFilter;\n"};
jalangiLabel595:
    while (true) {
        try {
            J$.Se(441, '/home/james/nodejs/HiPar/node_modules/lodash/_arrayFilter_jalangi_.js', '/home/james/nodejs/HiPar/node_modules/lodash/_arrayFilter.js');
            function arrayFilter(array, predicate) {
                jalangiLabel594:
                    while (true) {
                        try {
                            J$.Fe(337, arguments.callee, this, arguments);
                            arguments = J$.N(345, 'arguments', arguments, 4);
                            array = J$.N(353, 'array', array, 4);
                            predicate = J$.N(361, 'predicate', predicate, 4);
                            J$.N(369, 'index', index, 0);
                            J$.N(377, 'length', length, 0);
                            J$.N(385, 'resIndex', resIndex, 0);
                            J$.N(393, 'result', result, 0);
                            J$.N(401, 'value', value, 0);
                            var index = J$.X1(81, J$.W(73, 'index', J$.U(10, '-', J$.T(9, 1, 22, false)), index, 1)), length = J$.X1(97, J$.W(89, 'length', J$.X1(465, J$.C(8, J$.B(18, '==', J$.R(17, 'array', array, 0), J$.T(25, null, 25, false), 0))) ? J$.T(33, 0, 22, false) : J$.G(49, J$.R(41, 'array', array, 0), 'length', 0), length, 1)), resIndex = J$.X1(113, J$.W(105, 'resIndex', J$.T(57, 0, 22, false), resIndex, 1)), result = J$.X1(129, J$.W(121, 'result', J$.T(65, [], 10, false), result, 1));
                            while (J$.X1(481, J$.C(24, J$.B(42, '<', index = J$.W(153, 'index', J$.B(34, '+', J$.U(26, '+', J$.R(145, 'index', index, 0)), J$.T(137, 1, 22, false), 0), index, 0), J$.R(161, 'length', length, 0), 0)))) {
                                var value = J$.X1(201, J$.W(193, 'value', J$.G(185, J$.R(169, 'array', array, 0), J$.R(177, 'index', index, 0), 4), value, 1));
                                if (J$.X1(473, J$.C(16, J$.F(241, J$.R(209, 'predicate', predicate, 0), 0)(J$.R(217, 'value', value, 0), J$.R(225, 'index', index, 0), J$.R(233, 'array', array, 0))))) {
                                    J$.X1(305, J$.P(297, J$.R(249, 'result', result, 0), J$.B(66, '-', resIndex = J$.W(273, 'resIndex', J$.B(58, '+', J$.U(50, '+', J$.R(265, 'resIndex', resIndex, 0)), J$.T(257, 1, 22, false), 0), resIndex, 0), J$.T(281, 1, 22, false), 0), J$.R(289, 'value', value, 0), 2));
                                }
                            }
                            return J$.X1(329, J$.Rt(321, J$.R(313, 'result', result, 0)));
                        } catch (J$e) {
                            J$.Ex(489, J$e);
                        } finally {
                            if (J$.Fr(497))
                                continue jalangiLabel594;
                            else
                                return J$.Ra();
                        }
                    }
            }
            arrayFilter = J$.N(457, 'arrayFilter', J$.T(449, arrayFilter, 12, false, 337), 0);
            J$.X1(433, J$.P(425, J$.R(409, 'module', module, 2), 'exports', J$.R(417, 'arrayFilter', arrayFilter, 1), 0));
        } catch (J$e) {
            J$.Ex(505, J$e);
        } finally {
            if (J$.Sr(513)) {
                J$.L();
                continue jalangiLabel595;
            } else {
                J$.L();
                break jalangiLabel595;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
