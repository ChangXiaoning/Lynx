J$.iids = {"9":[1,17,1,24],"17":[1,25,1,39],"25":[1,17,1,40],"33":[1,17,1,40],"41":[1,17,1,40],"49":[11,3,11,7],"57":[11,23,11,32],"65":[11,19,11,34],"73":[11,3,11,34],"81":[11,3,11,35],"89":[12,3,12,7],"97":[12,15,12,16],"105":[12,3,12,16],"113":[12,3,12,17],"121":[10,1,13,2],"129":[10,1,13,2],"137":[15,1,15,7],"145":[15,18,15,28],"153":[15,1,15,28],"161":[15,1,15,29],"169":[1,1,15,29],"177":[1,1,15,29],"185":[10,1,13,2],"193":[1,1,15,29],"201":[10,1,13,2],"209":[10,1,13,2],"217":[1,1,15,29],"225":[1,1,15,29],"nBranches":0,"originalCodeFileName":"/home/james/nodejs/HiPar/node_modules/lodash/_stackClear.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/node_modules/lodash/_stackClear_jalangi_.js","code":"var ListCache = require('./_ListCache');\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\nmodule.exports = stackClear;\n"};
jalangiLabel471:
    while (true) {
        try {
            J$.Se(169, '/home/james/nodejs/HiPar/node_modules/lodash/_stackClear_jalangi_.js', '/home/james/nodejs/HiPar/node_modules/lodash/_stackClear.js');
            function stackClear() {
                jalangiLabel470:
                    while (true) {
                        try {
                            J$.Fe(121, arguments.callee, this, arguments);
                            arguments = J$.N(129, 'arguments', arguments, 4);
                            J$.X1(81, J$.P(73, J$.R(49, 'this', this, 0), '__data__', J$.F(65, J$.R(57, 'ListCache', ListCache, 1), 1)(), 0));
                            J$.X1(113, J$.P(105, J$.R(89, 'this', this, 0), 'size', J$.T(97, 0, 22, false), 0));
                        } catch (J$e) {
                            J$.Ex(201, J$e);
                        } finally {
                            if (J$.Fr(209))
                                continue jalangiLabel470;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(177, 'ListCache', ListCache, 0);
            stackClear = J$.N(193, 'stackClear', J$.T(185, stackClear, 12, false, 121), 0);
            var ListCache = J$.X1(41, J$.W(33, 'ListCache', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, './_ListCache', 21, false)), ListCache, 3));
            J$.X1(161, J$.P(153, J$.R(137, 'module', module, 2), 'exports', J$.R(145, 'stackClear', stackClear, 1), 0));
        } catch (J$e) {
            J$.Ex(217, J$e);
        } finally {
            if (J$.Sr(225)) {
                J$.L();
                continue jalangiLabel471;
            } else {
                J$.L();
                break jalangiLabel471;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
