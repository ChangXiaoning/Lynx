{"8":[12,12,12,25],"9":[11,16,11,17],"10":[11,15,11,17],"16":[18,9,18,39],"17":[12,12,12,17],"18":[12,12,12,25],"24":[16,10,16,26],"25":[12,21,12,25],"26":[16,10,16,17],"33":[12,28,12,29],"41":[12,32,12,37],"42":[16,10,16,26],"49":[12,32,12,44],"50":[19,14,19,24],"57":[13,14,13,15],"65":[14,12,14,14],"66":[19,14,19,24],"73":[11,15,11,17],"81":[11,15,11,17],"89":[12,12,12,44],"97":[12,12,12,44],"105":[13,14,13,15],"113":[13,14,13,15],"121":[14,12,14,14],"129":[14,12,14,14],"145":[16,12,16,17],"153":[16,10,16,17],"161":[16,20,16,26],"169":[17,17,17,22],"177":[17,23,17,28],"185":[17,17,17,29],"193":[17,17,17,29],"201":[17,17,17,29],"209":[18,9,18,18],"217":[18,19,18,24],"225":[18,26,18,31],"233":[18,33,18,38],"241":[18,9,18,39],"249":[19,7,19,13],"265":[19,14,19,22],"273":[19,14,19,24],"289":[19,28,19,33],"297":[19,7,19,33],"305":[19,7,19,34],"313":[22,10,22,16],"321":[22,10,22,16],"329":[22,3,22,17],"337":[10,1,23,2],"345":[10,1,23,2],"353":[10,1,23,2],"361":[10,1,23,2],"369":[10,1,23,2],"377":[10,1,23,2],"385":[10,1,23,2],"393":[10,1,23,2],"401":[10,1,23,2],"409":[25,1,25,7],"417":[25,18,25,29],"425":[25,1,25,29],"433":[25,1,25,30],"441":[1,1,25,30],"449":[10,1,23,2],"457":[1,1,25,30],"465":[12,12,12,44],"473":[18,5,20,6],"481":[16,3,21,4],"489":[10,1,23,2],"497":[10,1,23,2],"505":[1,1,25,30],"513":[1,1,25,30],"nBranches":6,"originalCodeFileName":"/home/james/nodejs/HiPar/node_modules/lodash/_arrayFilter.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/node_modules/lodash/_arrayFilter_jalangi_.js","code":"/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayFilter;\n"}