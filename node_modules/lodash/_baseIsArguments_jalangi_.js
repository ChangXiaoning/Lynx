J$.iids = {"8":[15,10,15,61],"9":[1,18,1,25],"10":[15,33,15,61],"17":[1,26,1,41],"25":[1,18,1,42],"33":[2,16,2,23],"41":[2,24,2,40],"49":[2,16,2,41],"57":[1,18,1,42],"65":[1,18,1,42],"73":[2,16,2,41],"81":[2,16,2,41],"89":[5,15,5,35],"97":[5,15,5,35],"105":[5,15,5,35],"113":[15,10,15,22],"121":[15,23,15,28],"129":[15,10,15,29],"137":[15,33,15,43],"145":[15,44,15,49],"153":[15,33,15,50],"161":[15,54,15,61],"169":[15,10,15,61],"177":[15,3,15,62],"185":[14,1,16,2],"193":[14,1,16,2],"201":[14,1,16,2],"209":[18,1,18,7],"217":[18,18,18,33],"225":[18,1,18,33],"233":[18,1,18,34],"241":[1,1,18,34],"249":[1,1,18,34],"257":[1,1,18,34],"265":[1,1,18,34],"273":[14,1,16,2],"281":[1,1,18,34],"289":[14,1,16,2],"297":[14,1,16,2],"305":[1,1,18,34],"313":[1,1,18,34],"nBranches":2,"originalCodeFileName":"/home/james/nodejs/HiPar/node_modules/lodash/_baseIsArguments.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/node_modules/lodash/_baseIsArguments_jalangi_.js","code":"var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;\n"};
jalangiLabel552:
    while (true) {
        try {
            J$.Se(241, '/home/james/nodejs/HiPar/node_modules/lodash/_baseIsArguments_jalangi_.js', '/home/james/nodejs/HiPar/node_modules/lodash/_baseIsArguments.js');
            function baseIsArguments(value) {
                jalangiLabel551:
                    while (true) {
                        try {
                            J$.Fe(185, arguments.callee, this, arguments);
                            arguments = J$.N(193, 'arguments', arguments, 4);
                            value = J$.N(201, 'value', value, 4);
                            return J$.X1(177, J$.Rt(169, J$.C(8, J$.F(129, J$.R(113, 'isObjectLike', isObjectLike, 1), 0)(J$.R(121, 'value', value, 0))) ? J$.B(10, '==', J$.F(153, J$.R(137, 'baseGetTag', baseGetTag, 1), 0)(J$.R(145, 'value', value, 0)), J$.R(161, 'argsTag', argsTag, 1), 0) : J$._()));
                        } catch (J$e) {
                            J$.Ex(289, J$e);
                        } finally {
                            if (J$.Fr(297))
                                continue jalangiLabel551;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(249, 'baseGetTag', baseGetTag, 0);
            J$.N(257, 'isObjectLike', isObjectLike, 0);
            J$.N(265, 'argsTag', argsTag, 0);
            baseIsArguments = J$.N(281, 'baseIsArguments', J$.T(273, baseIsArguments, 12, false, 185), 0);
            var baseGetTag = J$.X1(65, J$.W(57, 'baseGetTag', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, './_baseGetTag', 21, false)), baseGetTag, 3)), isObjectLike = J$.X1(81, J$.W(73, 'isObjectLike', J$.F(49, J$.R(33, 'require', require, 2), 0)(J$.T(41, './isObjectLike', 21, false)), isObjectLike, 3));
            var argsTag = J$.X1(105, J$.W(97, 'argsTag', J$.T(89, '[object Arguments]', 21, false), argsTag, 3));
            J$.X1(233, J$.P(225, J$.R(209, 'module', module, 2), 'exports', J$.R(217, 'baseIsArguments', baseIsArguments, 1), 0));
        } catch (J$e) {
            J$.Ex(305, J$e);
        } finally {
            if (J$.Sr(313)) {
                J$.L();
                continue jalangiLabel552;
            } else {
                J$.L();
                break jalangiLabel552;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
