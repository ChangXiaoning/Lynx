{"8":[22,9,22,64],"9":[1,23,1,30],"10":[22,7,22,65],"16":[23,3,23,42],"17":[1,31,1,51],"18":[23,3,23,22],"24":[22,7,23,42],"25":[1,23,1,52],"26":[23,28,23,41],"32":[22,7,23,42],"33":[2,6,2,13],"34":[23,26,23,42],"41":[2,14,2,20],"49":[2,6,2,21],"57":[1,23,1,52],"65":[1,23,1,52],"73":[2,6,2,21],"81":[2,6,2,21],"89":[5,19,5,25],"97":[5,19,5,35],"105":[5,19,5,35],"113":[5,19,5,35],"121":[8,22,8,33],"129":[8,22,8,48],"137":[8,22,8,48],"145":[8,22,8,48],"153":[21,18,21,24],"161":[21,25,21,28],"169":[21,18,21,29],"177":[21,18,21,29],"185":[21,18,21,29],"193":[22,9,22,23],"201":[22,29,22,35],"209":[22,37,22,40],"217":[22,9,22,41],"219":[22,9,22,28],"225":[22,45,22,47],"233":[22,48,22,56],"241":[22,58,22,63],"249":[22,45,22,64],"257":[23,3,23,8],"265":[23,13,23,22],"273":[23,28,23,31],"281":[23,35,23,41],"289":[24,5,24,20],"297":[24,21,24,27],"305":[24,29,24,32],"313":[24,34,24,39],"321":[24,5,24,40],"329":[24,5,24,41],"337":[20,1,26,2],"345":[20,1,26,2],"353":[20,1,26,2],"361":[20,1,26,2],"369":[20,1,26,2],"377":[20,1,26,2],"385":[28,1,28,7],"393":[28,18,28,29],"401":[28,1,28,29],"409":[28,1,28,30],"417":[1,1,28,30],"425":[1,1,28,30],"433":[1,1,28,30],"441":[1,1,28,30],"449":[1,1,28,30],"457":[20,1,26,2],"465":[1,1,28,30],"473":[22,3,25,4],"481":[20,1,26,2],"489":[20,1,26,2],"497":[1,1,28,30],"505":[1,1,28,30],"nBranches":8,"originalCodeFileName":"/home/james/nodejs/HiPar/node_modules/lodash/_assignValue.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/node_modules/lodash/_assignValue_jalangi_.js","code":"var baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignValue;\n"}