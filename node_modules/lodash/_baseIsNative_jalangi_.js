J$.iids = {"8":[40,7,40,42],"9":[1,18,1,25],"10":[26,25,28,75],"16":[40,7,40,42],"17":[1,26,1,40],"18":[26,25,28,81],"24":[43,17,43,34],"25":[1,18,1,41],"26":[40,7,40,23],"33":[2,12,2,19],"41":[2,20,2,33],"49":[2,12,2,34],"57":[3,12,3,19],"65":[3,20,3,32],"73":[3,12,3,33],"81":[4,12,4,19],"89":[4,20,4,33],"97":[4,12,4,34],"105":[1,18,1,41],"113":[1,18,1,41],"121":[2,12,2,34],"129":[2,12,2,34],"137":[3,12,3,33],"145":[3,12,3,33],"153":[4,12,4,34],"161":[4,12,4,34],"169":[10,20,10,41],"177":[10,20,10,41],"185":[10,20,10,41],"193":[13,20,13,49],"201":[13,20,13,49],"209":[13,20,13,49],"217":[16,17,16,25],"225":[16,17,16,35],"233":[17,15,17,21],"241":[17,15,17,31],"249":[16,17,16,35],"257":[16,17,16,35],"265":[17,15,17,31],"273":[17,15,17,31],"281":[20,20,20,29],"289":[20,20,20,38],"297":[20,20,20,38],"305":[20,20,20,38],"313":[23,22,23,33],"321":[23,22,23,48],"329":[23,22,23,48],"337":[23,22,23,48],"345":[26,18,26,24],"353":[26,25,26,28],"361":[27,1,27,13],"369":[27,19,27,33],"377":[27,1,27,34],"379":[27,1,27,18],"385":[27,43,27,55],"393":[27,57,27,63],"401":[27,1,27,64],"403":[27,1,27,42],"409":[28,9,28,65],"417":[28,67,28,74],"425":[27,1,28,75],"427":[27,1,28,8],"433":[28,78,28,81],"441":[26,18,28,82],"449":[26,18,28,82],"457":[26,18,28,82],"465":[40,8,40,16],"473":[40,17,40,22],"481":[40,8,40,23],"489":[40,27,40,35],"497":[40,36,40,41],"505":[40,27,40,42],"513":[41,12,41,17],"521":[41,12,41,17],"529":[41,5,41,18],"537":[43,17,43,27],"545":[43,28,43,33],"553":[43,17,43,34],"561":[43,37,43,47],"569":[43,50,43,62],"577":[43,17,43,62],"585":[43,17,43,62],"593":[44,10,44,17],"601":[44,23,44,31],"609":[44,32,44,37],"617":[44,23,44,38],"625":[44,10,44,39],"627":[44,10,44,22],"633":[44,10,44,39],"641":[44,3,44,40],"649":[39,1,45,2],"657":[39,1,45,2],"665":[39,1,45,2],"673":[39,1,45,2],"681":[47,1,47,7],"689":[47,18,47,30],"697":[47,1,47,30],"705":[47,1,47,31],"713":[1,1,47,31],"721":[1,1,47,31],"729":[1,1,47,31],"737":[1,1,47,31],"745":[1,1,47,31],"753":[1,1,47,31],"761":[1,1,47,31],"769":[1,1,47,31],"777":[1,1,47,31],"785":[1,1,47,31],"793":[1,1,47,31],"801":[1,1,47,31],"809":[39,1,45,2],"817":[1,1,47,31],"825":[40,3,42,4],"833":[43,17,43,62],"841":[39,1,45,2],"849":[39,1,45,2],"857":[1,1,47,31],"865":[1,1,47,31],"nBranches":6,"originalCodeFileName":"/home/james/nodejs/HiPar/node_modules/lodash/_baseIsNative.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/node_modules/lodash/_baseIsNative_jalangi_.js","code":"var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n"};
jalangiLabel484:
    while (true) {
        try {
            J$.Se(713, '/home/james/nodejs/HiPar/node_modules/lodash/_baseIsNative_jalangi_.js', '/home/james/nodejs/HiPar/node_modules/lodash/_baseIsNative.js');
            function baseIsNative(value) {
                jalangiLabel483:
                    while (true) {
                        try {
                            J$.Fe(649, arguments.callee, this, arguments);
                            arguments = J$.N(657, 'arguments', arguments, 4);
                            value = J$.N(665, 'value', value, 4);
                            J$.N(673, 'pattern', pattern, 0);
                            if (J$.X1(825, J$.C(16, J$.C(8, J$.U(26, '!', J$.F(481, J$.R(465, 'isObject', isObject, 1), 0)(J$.R(473, 'value', value, 0)))) ? J$._() : J$.F(505, J$.R(489, 'isMasked', isMasked, 1), 0)(J$.R(497, 'value', value, 0))))) {
                                return J$.X1(529, J$.Rt(521, J$.T(513, false, 23, false)));
                            }
                            var pattern = J$.X1(585, J$.W(577, 'pattern', J$.X1(833, J$.C(24, J$.F(553, J$.R(537, 'isFunction', isFunction, 1), 0)(J$.R(545, 'value', value, 0)))) ? J$.R(561, 'reIsNative', reIsNative, 1) : J$.R(569, 'reIsHostCtor', reIsHostCtor, 1), pattern, 1));
                            return J$.X1(641, J$.Rt(633, J$.M(625, J$.R(593, 'pattern', pattern, 0), 'test', 0)(J$.F(617, J$.R(601, 'toSource', toSource, 1), 0)(J$.R(609, 'value', value, 0)))));
                        } catch (J$e) {
                            J$.Ex(841, J$e);
                        } finally {
                            if (J$.Fr(849))
                                continue jalangiLabel483;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(721, 'isFunction', isFunction, 0);
            J$.N(729, 'isMasked', isMasked, 0);
            J$.N(737, 'isObject', isObject, 0);
            J$.N(745, 'toSource', toSource, 0);
            J$.N(753, 'reRegExpChar', reRegExpChar, 0);
            J$.N(761, 'reIsHostCtor', reIsHostCtor, 0);
            J$.N(769, 'funcProto', funcProto, 0);
            J$.N(777, 'objectProto', objectProto, 0);
            J$.N(785, 'funcToString', funcToString, 0);
            J$.N(793, 'hasOwnProperty', hasOwnProperty, 0);
            J$.N(801, 'reIsNative', reIsNative, 0);
            baseIsNative = J$.N(817, 'baseIsNative', J$.T(809, baseIsNative, 12, false, 649), 0);
            var isFunction = J$.X1(113, J$.W(105, 'isFunction', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, './isFunction', 21, false)), isFunction, 3)), isMasked = J$.X1(129, J$.W(121, 'isMasked', J$.F(49, J$.R(33, 'require', require, 2), 0)(J$.T(41, './_isMasked', 21, false)), isMasked, 3)), isObject = J$.X1(145, J$.W(137, 'isObject', J$.F(73, J$.R(57, 'require', require, 2), 0)(J$.T(65, './isObject', 21, false)), isObject, 3)), toSource = J$.X1(161, J$.W(153, 'toSource', J$.F(97, J$.R(81, 'require', require, 2), 0)(J$.T(89, './_toSource', 21, false)), toSource, 3));
            var reRegExpChar = J$.X1(185, J$.W(177, 'reRegExpChar', J$.T(169, /[\\^$.*+?()[\]{}|]/g, 14, false), reRegExpChar, 3));
            var reIsHostCtor = J$.X1(209, J$.W(201, 'reIsHostCtor', J$.T(193, /^\[object .+?Constructor\]$/, 14, false), reIsHostCtor, 3));
            var funcProto = J$.X1(257, J$.W(249, 'funcProto', J$.G(225, J$.R(217, 'Function', Function, 2), 'prototype', 0), funcProto, 3)), objectProto = J$.X1(273, J$.W(265, 'objectProto', J$.G(241, J$.R(233, 'Object', Object, 2), 'prototype', 0), objectProto, 3));
            var funcToString = J$.X1(305, J$.W(297, 'funcToString', J$.G(289, J$.R(281, 'funcProto', funcProto, 1), 'toString', 0), funcToString, 3));
            var hasOwnProperty = J$.X1(337, J$.W(329, 'hasOwnProperty', J$.G(321, J$.R(313, 'objectProto', objectProto, 1), 'hasOwnProperty', 0), hasOwnProperty, 3));
            var reIsNative = J$.X1(457, J$.W(449, 'reIsNative', J$.F(441, J$.R(345, 'RegExp', RegExp, 2), 0)(J$.B(18, '+', J$.B(10, '+', J$.T(353, '^', 21, false), J$.M(425, J$.M(401, J$.M(377, J$.R(361, 'funcToString', funcToString, 1), 'call', 0)(J$.R(369, 'hasOwnProperty', hasOwnProperty, 1)), 'replace', 0)(J$.R(385, 'reRegExpChar', reRegExpChar, 1), J$.T(393, '\\$&', 21, false)), 'replace', 0)(J$.T(409, /hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, 14, false), J$.T(417, '$1.*?', 21, false)), 0), J$.T(433, '$', 21, false), 0)), reIsNative, 3));
            J$.X1(705, J$.P(697, J$.R(681, 'module', module, 2), 'exports', J$.R(689, 'baseIsNative', baseIsNative, 1), 0));
        } catch (J$e) {
            J$.Ex(857, J$e);
        } finally {
            if (J$.Sr(865)) {
                J$.L();
                continue jalangiLabel484;
            } else {
                J$.L();
                break jalangiLabel484;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
