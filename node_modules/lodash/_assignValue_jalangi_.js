J$.iids = {"8":[22,9,22,64],"9":[1,23,1,30],"10":[22,7,22,65],"16":[23,3,23,42],"17":[1,31,1,51],"18":[23,3,23,22],"24":[22,7,23,42],"25":[1,23,1,52],"26":[23,28,23,41],"32":[22,7,23,42],"33":[2,6,2,13],"34":[23,26,23,42],"41":[2,14,2,20],"49":[2,6,2,21],"57":[1,23,1,52],"65":[1,23,1,52],"73":[2,6,2,21],"81":[2,6,2,21],"89":[5,19,5,25],"97":[5,19,5,35],"105":[5,19,5,35],"113":[5,19,5,35],"121":[8,22,8,33],"129":[8,22,8,48],"137":[8,22,8,48],"145":[8,22,8,48],"153":[21,18,21,24],"161":[21,25,21,28],"169":[21,18,21,29],"177":[21,18,21,29],"185":[21,18,21,29],"193":[22,9,22,23],"201":[22,29,22,35],"209":[22,37,22,40],"217":[22,9,22,41],"219":[22,9,22,28],"225":[22,45,22,47],"233":[22,48,22,56],"241":[22,58,22,63],"249":[22,45,22,64],"257":[23,3,23,8],"265":[23,13,23,22],"273":[23,28,23,31],"281":[23,35,23,41],"289":[24,5,24,20],"297":[24,21,24,27],"305":[24,29,24,32],"313":[24,34,24,39],"321":[24,5,24,40],"329":[24,5,24,41],"337":[20,1,26,2],"345":[20,1,26,2],"353":[20,1,26,2],"361":[20,1,26,2],"369":[20,1,26,2],"377":[20,1,26,2],"385":[28,1,28,7],"393":[28,18,28,29],"401":[28,1,28,29],"409":[28,1,28,30],"417":[1,1,28,30],"425":[1,1,28,30],"433":[1,1,28,30],"441":[1,1,28,30],"449":[1,1,28,30],"457":[20,1,26,2],"465":[1,1,28,30],"473":[22,3,25,4],"481":[20,1,26,2],"489":[20,1,26,2],"497":[1,1,28,30],"505":[1,1,28,30],"nBranches":8,"originalCodeFileName":"/home/james/nodejs/HiPar/node_modules/lodash/_assignValue.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/node_modules/lodash/_assignValue_jalangi_.js","code":"var baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignValue;\n"};
jalangiLabel533:
    while (true) {
        try {
            J$.Se(417, '/home/james/nodejs/HiPar/node_modules/lodash/_assignValue_jalangi_.js', '/home/james/nodejs/HiPar/node_modules/lodash/_assignValue.js');
            function assignValue(object, key, value) {
                jalangiLabel532:
                    while (true) {
                        try {
                            J$.Fe(337, arguments.callee, this, arguments);
                            arguments = J$.N(345, 'arguments', arguments, 4);
                            object = J$.N(353, 'object', object, 4);
                            key = J$.N(361, 'key', key, 4);
                            value = J$.N(369, 'value', value, 4);
                            J$.N(377, 'objValue', objValue, 0);
                            var objValue = J$.X1(185, J$.W(177, 'objValue', J$.G(169, J$.R(153, 'object', object, 0), J$.R(161, 'key', key, 0), 4), objValue, 1));
                            if (J$.X1(473, J$.C(32, J$.C(24, J$.U(10, '!', J$.C(8, J$.M(217, J$.R(193, 'hasOwnProperty', hasOwnProperty, 1), 'call', 0)(J$.R(201, 'object', object, 0), J$.R(209, 'key', key, 0))) ? J$.F(249, J$.R(225, 'eq', eq, 1), 0)(J$.R(233, 'objValue', objValue, 0), J$.R(241, 'value', value, 0)) : J$._())) ? J$._() : J$.C(16, J$.B(18, '===', J$.R(257, 'value', value, 0), J$.T(265, undefined, 24, false), 0)) ? J$.U(34, '!', J$.B(26, 'in', J$.R(273, 'key', key, 0), J$.R(281, 'object', object, 0), 0)) : J$._()))) {
                                J$.X1(329, J$.F(321, J$.R(289, 'baseAssignValue', baseAssignValue, 1), 0)(J$.R(297, 'object', object, 0), J$.R(305, 'key', key, 0), J$.R(313, 'value', value, 0)));
                            }
                        } catch (J$e) {
                            J$.Ex(481, J$e);
                        } finally {
                            if (J$.Fr(489))
                                continue jalangiLabel532;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(425, 'baseAssignValue', baseAssignValue, 0);
            J$.N(433, 'eq', eq, 0);
            J$.N(441, 'objectProto', objectProto, 0);
            J$.N(449, 'hasOwnProperty', hasOwnProperty, 0);
            assignValue = J$.N(465, 'assignValue', J$.T(457, assignValue, 12, false, 337), 0);
            var baseAssignValue = J$.X1(65, J$.W(57, 'baseAssignValue', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, './_baseAssignValue', 21, false)), baseAssignValue, 3)), eq = J$.X1(81, J$.W(73, 'eq', J$.F(49, J$.R(33, 'require', require, 2), 0)(J$.T(41, './eq', 21, false)), eq, 3));
            var objectProto = J$.X1(113, J$.W(105, 'objectProto', J$.G(97, J$.R(89, 'Object', Object, 2), 'prototype', 0), objectProto, 3));
            var hasOwnProperty = J$.X1(145, J$.W(137, 'hasOwnProperty', J$.G(129, J$.R(121, 'objectProto', objectProto, 1), 'hasOwnProperty', 0), hasOwnProperty, 3));
            J$.X1(409, J$.P(401, J$.R(385, 'module', module, 2), 'exports', J$.R(393, 'assignValue', assignValue, 1), 0));
        } catch (J$e) {
            J$.Ex(497, J$e);
        } finally {
            if (J$.Sr(505)) {
                J$.L();
                continue jalangiLabel533;
            } else {
                J$.L();
                break jalangiLabel533;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
