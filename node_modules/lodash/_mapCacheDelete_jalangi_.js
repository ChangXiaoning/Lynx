J$.iids = {"8":[14,16,14,22],"9":[1,18,1,25],"17":[1,26,1,41],"25":[1,18,1,42],"33":[1,18,1,42],"41":[1,18,1,42],"49":[13,16,13,26],"57":[13,27,13,31],"65":[13,33,13,36],"73":[13,16,13,37],"81":[13,38,13,46],"89":[13,48,13,51],"97":[13,16,13,52],"99":[13,16,13,47],"105":[13,16,13,52],"113":[13,16,13,52],"121":[14,3,14,7],"129":[14,16,14,22],"137":[14,25,14,26],"145":[14,29,14,30],"153":[14,3,14,30],"155":[14,3,14,30],"161":[14,3,14,31],"169":[15,10,15,16],"177":[15,10,15,16],"185":[15,3,15,17],"193":[12,1,16,2],"201":[12,1,16,2],"209":[12,1,16,2],"217":[12,1,16,2],"225":[18,1,18,7],"233":[18,18,18,32],"241":[18,1,18,32],"249":[18,1,18,33],"257":[1,1,18,33],"265":[1,1,18,33],"273":[12,1,16,2],"281":[1,1,18,33],"289":[14,16,14,30],"297":[12,1,16,2],"305":[12,1,16,2],"313":[1,1,18,33],"321":[1,1,18,33],"nBranches":2,"originalCodeFileName":"/home/james/nodejs/HiPar/node_modules/lodash/_mapCacheDelete.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/node_modules/lodash/_mapCacheDelete_jalangi_.js","code":"var getMapData = require('./_getMapData');\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;\n"};
jalangiLabel517:
    while (true) {
        try {
            J$.Se(257, '/home/james/nodejs/HiPar/node_modules/lodash/_mapCacheDelete_jalangi_.js', '/home/james/nodejs/HiPar/node_modules/lodash/_mapCacheDelete.js');
            function mapCacheDelete(key) {
                jalangiLabel516:
                    while (true) {
                        try {
                            J$.Fe(193, arguments.callee, this, arguments);
                            arguments = J$.N(201, 'arguments', arguments, 4);
                            key = J$.N(209, 'key', key, 4);
                            J$.N(217, 'result', result, 0);
                            var result = J$.X1(113, J$.W(105, 'result', J$.M(97, J$.F(73, J$.R(49, 'getMapData', getMapData, 1), 0)(J$.R(57, 'this', this, 0), J$.R(65, 'key', key, 0)), J$.T(81, 'delete', 21, false), 1)(J$.R(89, 'key', key, 0)), result, 1));
                            J$.X1(161, J$.A(153, J$.R(121, 'this', this, 0), 'size', '-', 0)(J$.X1(289, J$.C(8, J$.R(129, 'result', result, 0))) ? J$.T(137, 1, 22, false) : J$.T(145, 0, 22, false)));
                            return J$.X1(185, J$.Rt(177, J$.R(169, 'result', result, 0)));
                        } catch (J$e) {
                            J$.Ex(297, J$e);
                        } finally {
                            if (J$.Fr(305))
                                continue jalangiLabel516;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(265, 'getMapData', getMapData, 0);
            mapCacheDelete = J$.N(281, 'mapCacheDelete', J$.T(273, mapCacheDelete, 12, false, 193), 0);
            var getMapData = J$.X1(41, J$.W(33, 'getMapData', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, './_getMapData', 21, false)), getMapData, 3));
            J$.X1(249, J$.P(241, J$.R(225, 'module', module, 2), 'exports', J$.R(233, 'mapCacheDelete', mapCacheDelete, 1), 0));
        } catch (J$e) {
            J$.Ex(313, J$e);
        } finally {
            if (J$.Sr(321)) {
                J$.L();
                continue jalangiLabel517;
            } else {
                J$.L();
                break jalangiLabel517;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
