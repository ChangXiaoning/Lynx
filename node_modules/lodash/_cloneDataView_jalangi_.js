J$.iids = {"8":[12,16,12,22],"9":[1,24,1,31],"17":[1,32,1,53],"25":[1,24,1,54],"33":[1,24,1,54],"41":[1,24,1,54],"49":[12,16,12,22],"57":[12,25,12,41],"65":[12,42,12,50],"73":[12,42,12,57],"81":[12,25,12,58],"89":[12,61,12,69],"97":[12,61,12,76],"105":[12,16,12,76],"113":[12,16,12,76],"121":[13,14,13,22],"129":[13,35,13,41],"137":[13,43,13,51],"145":[13,43,13,62],"153":[13,64,13,72],"161":[13,64,13,83],"169":[13,10,13,84],"171":[13,14,13,34],"177":[13,10,13,84],"185":[13,3,13,85],"193":[11,1,14,2],"201":[11,1,14,2],"209":[11,1,14,2],"217":[11,1,14,2],"225":[11,1,14,2],"233":[16,1,16,7],"241":[16,18,16,31],"249":[16,1,16,31],"257":[16,1,16,32],"265":[1,1,16,32],"273":[1,1,16,32],"281":[11,1,14,2],"289":[1,1,16,32],"297":[12,16,12,76],"305":[11,1,14,2],"313":[11,1,14,2],"321":[1,1,16,32],"329":[1,1,16,32],"nBranches":2,"originalCodeFileName":"/home/james/nodejs/HiPar/node_modules/lodash/_cloneDataView.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/node_modules/lodash/_cloneDataView_jalangi_.js","code":"var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nmodule.exports = cloneDataView;\n"};
jalangiLabel624:
    while (true) {
        try {
            J$.Se(265, '/home/james/nodejs/HiPar/node_modules/lodash/_cloneDataView_jalangi_.js', '/home/james/nodejs/HiPar/node_modules/lodash/_cloneDataView.js');
            function cloneDataView(dataView, isDeep) {
                jalangiLabel623:
                    while (true) {
                        try {
                            J$.Fe(193, arguments.callee, this, arguments);
                            arguments = J$.N(201, 'arguments', arguments, 4);
                            dataView = J$.N(209, 'dataView', dataView, 4);
                            isDeep = J$.N(217, 'isDeep', isDeep, 4);
                            J$.N(225, 'buffer', buffer, 0);
                            var buffer = J$.X1(113, J$.W(105, 'buffer', J$.X1(297, J$.C(8, J$.R(49, 'isDeep', isDeep, 0))) ? J$.F(81, J$.R(57, 'cloneArrayBuffer', cloneArrayBuffer, 1), 0)(J$.G(73, J$.R(65, 'dataView', dataView, 0), 'buffer', 0)) : J$.G(97, J$.R(89, 'dataView', dataView, 0), 'buffer', 0), buffer, 1));
                            return J$.X1(185, J$.Rt(177, J$.M(169, J$.R(121, 'dataView', dataView, 0), 'constructor', 2)(J$.R(129, 'buffer', buffer, 0), J$.G(145, J$.R(137, 'dataView', dataView, 0), 'byteOffset', 0), J$.G(161, J$.R(153, 'dataView', dataView, 0), 'byteLength', 0))));
                        } catch (J$e) {
                            J$.Ex(305, J$e);
                        } finally {
                            if (J$.Fr(313))
                                continue jalangiLabel623;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(273, 'cloneArrayBuffer', cloneArrayBuffer, 0);
            cloneDataView = J$.N(289, 'cloneDataView', J$.T(281, cloneDataView, 12, false, 193), 0);
            var cloneArrayBuffer = J$.X1(41, J$.W(33, 'cloneArrayBuffer', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, './_cloneArrayBuffer', 21, false)), cloneArrayBuffer, 3));
            J$.X1(257, J$.P(249, J$.R(233, 'module', module, 2), 'exports', J$.R(241, 'cloneDataView', cloneDataView, 1), 0));
        } catch (J$e) {
            J$.Ex(321, J$e);
        } finally {
            if (J$.Sr(329)) {
                J$.L();
                continue jalangiLabel624;
            } else {
                J$.L();
                break jalangiLabel624;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
