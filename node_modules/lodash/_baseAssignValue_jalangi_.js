J$.iids = {"8":[13,7,13,43],"9":[1,22,1,29],"10":[13,7,13,25],"16":[13,7,13,43],"17":[1,30,1,49],"25":[1,22,1,50],"33":[1,22,1,50],"41":[1,22,1,50],"49":[13,7,13,10],"57":[13,14,13,25],"65":[13,29,13,43],"73":[14,5,14,19],"81":[14,20,14,26],"89":[14,28,14,31],"97":[15,23,15,27],"105":[16,21,16,25],"113":[17,16,17,21],"121":[18,19,18,23],"129":[14,33,18,25],"137":[14,5,18,26],"145":[14,5,18,27],"153":[21,5,21,11],"161":[21,12,21,15],"169":[21,19,21,24],"177":[21,5,21,24],"185":[21,5,21,25],"193":[12,1,23,2],"201":[12,1,23,2],"209":[12,1,23,2],"217":[12,1,23,2],"225":[12,1,23,2],"233":[25,1,25,7],"241":[25,18,25,33],"249":[25,1,25,33],"257":[25,1,25,34],"265":[1,1,25,34],"273":[1,1,25,34],"281":[12,1,23,2],"289":[1,1,25,34],"297":[13,3,22,4],"305":[12,1,23,2],"313":[12,1,23,2],"321":[1,1,25,34],"329":[1,1,25,34],"nBranches":4,"originalCodeFileName":"/home/james/nodejs/HiPar/node_modules/lodash/_baseAssignValue.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/node_modules/lodash/_baseAssignValue_jalangi_.js","code":"var defineProperty = require('./_defineProperty');\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;\n"};
jalangiLabel535:
    while (true) {
        try {
            J$.Se(265, '/home/james/nodejs/HiPar/node_modules/lodash/_baseAssignValue_jalangi_.js', '/home/james/nodejs/HiPar/node_modules/lodash/_baseAssignValue.js');
            function baseAssignValue(object, key, value) {
                jalangiLabel534:
                    while (true) {
                        try {
                            J$.Fe(193, arguments.callee, this, arguments);
                            arguments = J$.N(201, 'arguments', arguments, 4);
                            object = J$.N(209, 'object', object, 4);
                            key = J$.N(217, 'key', key, 4);
                            value = J$.N(225, 'value', value, 4);
                            if (J$.X1(297, J$.C(16, J$.C(8, J$.B(10, '==', J$.R(49, 'key', key, 0), J$.T(57, '__proto__', 21, false), 0)) ? J$.R(65, 'defineProperty', defineProperty, 1) : J$._()))) {
                                J$.X1(145, J$.F(137, J$.R(73, 'defineProperty', defineProperty, 1), 0)(J$.R(81, 'object', object, 0), J$.R(89, 'key', key, 0), J$.T(129, {
                                    'configurable': J$.T(97, true, 23, false),
                                    'enumerable': J$.T(105, true, 23, false),
                                    'value': J$.R(113, 'value', value, 0),
                                    'writable': J$.T(121, true, 23, false)
                                }, 11, false)));
                            } else {
                                J$.X1(185, J$.P(177, J$.R(153, 'object', object, 0), J$.R(161, 'key', key, 0), J$.R(169, 'value', value, 0), 2));
                            }
                        } catch (J$e) {
                            J$.Ex(305, J$e);
                        } finally {
                            if (J$.Fr(313))
                                continue jalangiLabel534;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(273, 'defineProperty', defineProperty, 0);
            baseAssignValue = J$.N(289, 'baseAssignValue', J$.T(281, baseAssignValue, 12, false, 193), 0);
            var defineProperty = J$.X1(41, J$.W(33, 'defineProperty', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, './_defineProperty', 21, false)), defineProperty, 3));
            J$.X1(257, J$.P(249, J$.R(233, 'module', module, 2), 'exports', J$.R(241, 'baseAssignValue', baseAssignValue, 1), 0));
        } catch (J$e) {
            J$.Ex(321, J$e);
        } finally {
            if (J$.Sr(329)) {
                J$.L();
                continue jalangiLabel535;
            } else {
                J$.L();
                break jalangiLabel535;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
