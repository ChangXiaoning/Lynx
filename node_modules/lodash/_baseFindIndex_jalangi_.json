{"8":[14,24,14,33],"9":[13,16,13,21],"10":[14,40,14,42],"16":[16,10,16,19],"17":[13,16,13,28],"18":[14,11,14,43],"24":[17,9,17,46],"25":[14,11,14,20],"26":[16,22,16,29],"32":[16,10,16,48],"33":[14,24,14,33],"41":[14,36,14,37],"42":[16,22,16,29],"49":[14,41,14,42],"50":[16,32,16,39],"57":[13,16,13,28],"65":[13,16,13,28],"66":[16,32,16,48],"73":[14,11,14,43],"74":[21,10,21,12],"81":[14,11,14,43],"89":[16,10,16,19],"105":[16,22,16,27],"113":[16,22,16,29],"137":[16,34,16,39],"145":[16,32,16,39],"153":[16,42,16,48],"161":[17,9,17,18],"169":[17,19,17,24],"177":[17,25,17,30],"185":[17,19,17,31],"193":[17,33,17,38],"201":[17,40,17,45],"209":[17,9,17,46],"217":[18,14,18,19],"225":[18,14,18,19],"233":[18,7,18,20],"241":[21,11,21,12],"249":[21,10,21,12],"257":[21,3,21,13],"265":[12,1,22,2],"273":[12,1,22,2],"281":[12,1,22,2],"289":[12,1,22,2],"297":[12,1,22,2],"305":[12,1,22,2],"313":[12,1,22,2],"321":[12,1,22,2],"329":[24,1,24,7],"337":[24,18,24,31],"345":[24,1,24,31],"353":[24,1,24,32],"361":[1,1,24,32],"369":[12,1,22,2],"377":[1,1,24,32],"385":[14,24,14,42],"393":[16,10,16,48],"401":[17,5,19,6],"409":[16,3,20,4],"417":[12,1,22,2],"425":[12,1,22,2],"433":[1,1,24,32],"441":[1,1,24,32],"nBranches":8,"originalCodeFileName":"/home/james/nodejs/HiPar/node_modules/lodash/_baseFindIndex.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/node_modules/lodash/_baseFindIndex_jalangi_.js","code":"/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n"}