J$.iids = {"8":[16,14,16,29],"9":[1,21,1,28],"10":[15,17,15,19],"16":[19,12,19,28],"17":[1,29,1,47],"18":[16,14,16,29],"25":[1,21,1,48],"26":[19,12,19,19],"33":[2,18,2,25],"41":[2,26,2,45],"42":[19,12,19,28],"49":[2,18,2,46],"57":[3,15,3,22],"65":[3,23,3,39],"73":[3,15,3,40],"81":[4,15,4,22],"89":[4,23,4,39],"97":[4,15,4,40],"105":[5,15,5,22],"113":[5,23,5,39],"121":[5,15,5,40],"129":[1,21,1,48],"137":[1,21,1,48],"145":[2,18,2,46],"153":[2,18,2,46],"161":[3,15,3,40],"169":[3,15,3,40],"177":[4,15,4,40],"185":[4,15,4,40],"193":[5,15,5,40],"201":[5,15,5,40],"209":[15,18,15,19],"217":[16,14,16,21],"225":[16,25,16,29],"233":[16,32,16,33],"241":[16,36,16,43],"249":[16,36,16,50],"257":[15,17,15,19],"265":[15,17,15,19],"273":[16,14,16,50],"281":[16,14,16,50],"289":[18,5,18,9],"297":[18,5,18,17],"299":[18,5,18,15],"305":[18,5,18,18],"321":[19,14,19,19],"329":[19,12,19,19],"337":[19,22,19,28],"345":[20,21,20,28],"353":[20,29,20,34],"361":[20,21,20,35],"369":[20,21,20,35],"377":[20,21,20,35],"385":[21,9,21,13],"393":[21,18,21,23],"401":[21,24,21,25],"409":[21,18,21,26],"417":[21,28,21,33],"425":[21,34,21,35],"433":[21,28,21,36],"441":[21,9,21,37],"443":[21,9,21,17],"449":[21,9,21,38],"457":[14,1,23,2],"465":[14,1,23,2],"473":[14,1,23,2],"481":[14,1,23,2],"489":[14,1,23,2],"497":[14,1,23,2],"505":[26,1,26,9],"513":[26,1,26,19],"521":[26,28,26,41],"529":[26,1,26,41],"537":[26,1,26,42],"545":[27,1,27,9],"553":[27,1,27,19],"561":[27,20,27,28],"569":[27,32,27,46],"577":[27,1,27,46],"585":[27,1,27,47],"593":[28,1,28,9],"601":[28,1,28,19],"609":[28,26,28,37],"617":[28,1,28,37],"625":[28,1,28,38],"633":[29,1,29,9],"641":[29,1,29,19],"649":[29,26,29,37],"657":[29,1,29,37],"665":[29,1,29,38],"673":[30,1,30,9],"681":[30,1,30,19],"689":[30,26,30,37],"697":[30,1,30,37],"705":[30,1,30,38],"713":[32,1,32,7],"721":[32,18,32,26],"729":[32,1,32,26],"737":[32,1,32,27],"745":[1,1,32,27],"753":[1,1,32,27],"761":[1,1,32,27],"769":[1,1,32,27],"777":[1,1,32,27],"785":[1,1,32,27],"793":[14,1,23,2],"801":[1,1,32,27],"809":[16,14,16,50],"817":[19,5,22,6],"825":[14,1,23,2],"833":[14,1,23,2],"841":[1,1,32,27],"849":[1,1,32,27],"nBranches":4,"originalCodeFileName":"/home/james/nodejs/HiPar/node_modules/lodash/_MapCache.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/node_modules/lodash/_MapCache_jalangi_.js","code":"var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nmodule.exports = MapCache;\n"};
jalangiLabel500:
    while (true) {
        try {
            J$.Se(745, '/home/james/nodejs/HiPar/node_modules/lodash/_MapCache_jalangi_.js', '/home/james/nodejs/HiPar/node_modules/lodash/_MapCache.js');
            function MapCache(entries) {
                jalangiLabel499:
                    while (true) {
                        try {
                            J$.Fe(457, arguments.callee, this, arguments);
                            arguments = J$.N(465, 'arguments', arguments, 4);
                            entries = J$.N(473, 'entries', entries, 4);
                            J$.N(481, 'index', index, 0);
                            J$.N(489, 'length', length, 0);
                            J$.N(497, 'entry', entry, 0);
                            var index = J$.X1(265, J$.W(257, 'index', J$.U(10, '-', J$.T(209, 1, 22, false)), index, 1)), length = J$.X1(281, J$.W(273, 'length', J$.X1(809, J$.C(8, J$.B(18, '==', J$.R(217, 'entries', entries, 0), J$.T(225, null, 25, false), 0))) ? J$.T(233, 0, 22, false) : J$.G(249, J$.R(241, 'entries', entries, 0), 'length', 0), length, 1));
                            J$.X1(305, J$.M(297, J$.R(289, 'this', this, 0), 'clear', 0)());
                            while (J$.X1(817, J$.C(16, J$.B(42, '<', index = J$.W(329, 'index', J$.B(34, '+', J$.U(26, '+', J$.R(321, 'index', index, 0)), J$.T(313, 1, 22, false), 0), index, 0), J$.R(337, 'length', length, 0), 0)))) {
                                var entry = J$.X1(377, J$.W(369, 'entry', J$.G(361, J$.R(345, 'entries', entries, 0), J$.R(353, 'index', index, 0), 4), entry, 1));
                                J$.X1(449, J$.M(441, J$.R(385, 'this', this, 0), 'set', 0)(J$.G(409, J$.R(393, 'entry', entry, 0), J$.T(401, 0, 22, false), 4), J$.G(433, J$.R(417, 'entry', entry, 0), J$.T(425, 1, 22, false), 4)));
                            }
                        } catch (J$e) {
                            J$.Ex(825, J$e);
                        } finally {
                            if (J$.Fr(833))
                                continue jalangiLabel499;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(753, 'mapCacheClear', mapCacheClear, 0);
            J$.N(761, 'mapCacheDelete', mapCacheDelete, 0);
            J$.N(769, 'mapCacheGet', mapCacheGet, 0);
            J$.N(777, 'mapCacheHas', mapCacheHas, 0);
            J$.N(785, 'mapCacheSet', mapCacheSet, 0);
            MapCache = J$.N(801, 'MapCache', J$.T(793, MapCache, 12, false, 457), 0);
            var mapCacheClear = J$.X1(137, J$.W(129, 'mapCacheClear', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, './_mapCacheClear', 21, false)), mapCacheClear, 3)), mapCacheDelete = J$.X1(153, J$.W(145, 'mapCacheDelete', J$.F(49, J$.R(33, 'require', require, 2), 0)(J$.T(41, './_mapCacheDelete', 21, false)), mapCacheDelete, 3)), mapCacheGet = J$.X1(169, J$.W(161, 'mapCacheGet', J$.F(73, J$.R(57, 'require', require, 2), 0)(J$.T(65, './_mapCacheGet', 21, false)), mapCacheGet, 3)), mapCacheHas = J$.X1(185, J$.W(177, 'mapCacheHas', J$.F(97, J$.R(81, 'require', require, 2), 0)(J$.T(89, './_mapCacheHas', 21, false)), mapCacheHas, 3)), mapCacheSet = J$.X1(201, J$.W(193, 'mapCacheSet', J$.F(121, J$.R(105, 'require', require, 2), 0)(J$.T(113, './_mapCacheSet', 21, false)), mapCacheSet, 3));
            J$.X1(537, J$.P(529, J$.G(513, J$.R(505, 'MapCache', MapCache, 1), 'prototype', 0), 'clear', J$.R(521, 'mapCacheClear', mapCacheClear, 1), 0));
            J$.X1(585, J$.P(577, J$.G(553, J$.R(545, 'MapCache', MapCache, 1), 'prototype', 0), J$.T(561, 'delete', 21, false), J$.R(569, 'mapCacheDelete', mapCacheDelete, 1), 2));
            J$.X1(625, J$.P(617, J$.G(601, J$.R(593, 'MapCache', MapCache, 1), 'prototype', 0), 'get', J$.R(609, 'mapCacheGet', mapCacheGet, 1), 0));
            J$.X1(665, J$.P(657, J$.G(641, J$.R(633, 'MapCache', MapCache, 1), 'prototype', 0), 'has', J$.R(649, 'mapCacheHas', mapCacheHas, 1), 0));
            J$.X1(705, J$.P(697, J$.G(681, J$.R(673, 'MapCache', MapCache, 1), 'prototype', 0), 'set', J$.R(689, 'mapCacheSet', mapCacheSet, 1), 0));
            J$.X1(737, J$.P(729, J$.R(713, 'module', module, 2), 'exports', J$.R(721, 'MapCache', MapCache, 1), 0));
        } catch (J$e) {
            J$.Ex(841, J$e);
        } finally {
            if (J$.Sr(849)) {
                J$.L();
                continue jalangiLabel500;
            } else {
                J$.L();
                break jalangiLabel500;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
