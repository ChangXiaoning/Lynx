{"9":[11,12,11,16],"17":[11,17,11,26],"25":[11,27,11,30],"33":[11,17,11,31],"41":[11,12,11,32],"49":[11,12,11,32],"57":[11,5,11,33],"65":[10,10,12,4],"73":[10,10,12,4],"81":[10,10,12,4],"89":[10,10,12,4],"97":[10,10,12,4],"105":[10,3,12,5],"113":[9,1,13,2],"121":[9,1,13,2],"129":[9,1,13,2],"137":[9,1,13,2],"145":[15,1,15,7],"153":[15,18,15,25],"161":[15,1,15,25],"169":[15,1,15,26],"177":[1,1,15,26],"185":[9,1,13,2],"193":[1,1,15,26],"201":[10,10,12,4],"209":[10,10,12,4],"217":[9,1,13,2],"225":[9,1,13,2],"233":[1,1,15,26],"241":[1,1,15,26],"nBranches":0,"originalCodeFileName":"/home/james/nodejs/HiPar/node_modules/lodash/_overArg.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/node_modules/lodash/_overArg_jalangi_.js","code":"/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;\n"}