J$.iids = {"8":[6,20,6,49],"9":[1,20,1,27],"16":[25,16,25,28],"17":[1,28,1,45],"25":[1,20,1,46],"33":[2,13,2,20],"41":[2,21,2,35],"49":[2,13,2,36],"57":[3,12,3,19],"65":[3,20,3,33],"73":[3,12,3,34],"81":[1,20,1,46],"89":[1,20,1,46],"97":[2,13,2,36],"105":[2,13,2,36],"113":[3,12,3,34],"121":[3,12,3,34],"129":[6,20,6,28],"137":[6,32,6,40],"145":[6,32,6,49],"153":[6,20,6,49],"161":[6,20,6,49],"169":[25,16,25,28],"177":[25,31,25,40],"185":[25,41,25,53],"193":[25,31,25,54],"201":[25,57,25,69],"209":[25,16,25,69],"217":[25,16,25,69],"225":[27,1,27,7],"233":[27,18,27,26],"241":[27,1,27,26],"249":[27,1,27,27],"257":[1,1,27,27],"265":[1,1,27,27],"273":[1,1,27,27],"281":[1,1,27,27],"289":[1,1,27,27],"297":[1,1,27,27],"305":[25,16,25,69],"313":[1,1,27,27],"321":[1,1,27,27],"nBranches":4,"originalCodeFileName":"/home/james/nodejs/HiPar/node_modules/lodash/isRegExp.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/node_modules/lodash/isRegExp_jalangi_.js","code":"var baseIsRegExp = require('./_baseIsRegExp'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsRegExp = nodeUtil && nodeUtil.isRegExp;\n\n/**\n * Checks if `value` is classified as a `RegExp` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n * @example\n *\n * _.isRegExp(/abc/);\n * // => true\n *\n * _.isRegExp('/abc/');\n * // => false\n */\nvar isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\nmodule.exports = isRegExp;\n"};
jalangiLabel425:
    while (true) {
        try {
            J$.Se(257, '/home/james/nodejs/HiPar/node_modules/lodash/isRegExp_jalangi_.js', '/home/james/nodejs/HiPar/node_modules/lodash/isRegExp.js');
            J$.N(265, 'baseIsRegExp', baseIsRegExp, 0);
            J$.N(273, 'baseUnary', baseUnary, 0);
            J$.N(281, 'nodeUtil', nodeUtil, 0);
            J$.N(289, 'nodeIsRegExp', nodeIsRegExp, 0);
            J$.N(297, 'isRegExp', isRegExp, 0);
            var baseIsRegExp = J$.X1(89, J$.W(81, 'baseIsRegExp', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, './_baseIsRegExp', 21, false)), baseIsRegExp, 3)), baseUnary = J$.X1(105, J$.W(97, 'baseUnary', J$.F(49, J$.R(33, 'require', require, 2), 0)(J$.T(41, './_baseUnary', 21, false)), baseUnary, 3)), nodeUtil = J$.X1(121, J$.W(113, 'nodeUtil', J$.F(73, J$.R(57, 'require', require, 2), 0)(J$.T(65, './_nodeUtil', 21, false)), nodeUtil, 3));
            var nodeIsRegExp = J$.X1(161, J$.W(153, 'nodeIsRegExp', J$.C(8, J$.R(129, 'nodeUtil', nodeUtil, 1)) ? J$.G(145, J$.R(137, 'nodeUtil', nodeUtil, 1), 'isRegExp', 0) : J$._(), nodeIsRegExp, 3));
            var isRegExp = J$.X1(217, J$.W(209, 'isRegExp', J$.X1(305, J$.C(16, J$.R(169, 'nodeIsRegExp', nodeIsRegExp, 1))) ? J$.F(193, J$.R(177, 'baseUnary', baseUnary, 1), 0)(J$.R(185, 'nodeIsRegExp', nodeIsRegExp, 1)) : J$.R(201, 'baseIsRegExp', baseIsRegExp, 1), isRegExp, 3));
            J$.X1(249, J$.P(241, J$.R(225, 'module', module, 2), 'exports', J$.R(233, 'isRegExp', isRegExp, 1), 0));
        } catch (J$e) {
            J$.Ex(313, J$e);
        } finally {
            if (J$.Sr(321)) {
                J$.L();
                continue jalangiLabel425;
            } else {
                J$.L();
                break jalangiLabel425;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
