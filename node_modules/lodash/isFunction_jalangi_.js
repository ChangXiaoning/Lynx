J$.iids = {"8":[28,9,28,25],"9":[1,18,1,25],"10":[28,9,28,25],"16":[34,12,34,43],"17":[1,26,1,41],"18":[34,12,34,26],"24":[34,12,34,62],"25":[1,18,1,42],"26":[34,30,34,43],"32":[34,12,34,81],"33":[2,12,2,19],"34":[34,47,34,62],"41":[2,20,2,32],"42":[34,66,34,81],"49":[2,12,2,33],"57":[1,18,1,42],"65":[1,18,1,42],"73":[2,12,2,33],"81":[2,12,2,33],"89":[5,16,5,40],"97":[6,11,6,30],"105":[7,10,7,38],"113":[8,12,8,28],"121":[5,16,5,40],"129":[5,16,5,40],"137":[6,11,6,30],"145":[6,11,6,30],"153":[7,10,7,38],"161":[7,10,7,38],"169":[8,12,8,28],"177":[8,12,8,28],"185":[28,10,28,18],"193":[28,19,28,24],"201":[28,10,28,25],"209":[29,16,29,21],"217":[29,16,29,21],"225":[29,9,29,22],"233":[33,15,33,25],"241":[33,26,33,31],"249":[33,15,33,32],"257":[33,15,33,32],"265":[33,15,33,32],"273":[34,12,34,15],"281":[34,19,34,26],"289":[34,30,34,33],"297":[34,37,34,43],"305":[34,47,34,50],"313":[34,54,34,62],"321":[34,66,34,69],"329":[34,73,34,81],"337":[34,12,34,81],"345":[34,5,34,82],"353":[27,1,35,2],"361":[27,1,35,2],"369":[27,1,35,2],"377":[27,1,35,2],"385":[37,1,37,7],"393":[37,18,37,28],"401":[37,1,37,28],"409":[37,1,37,29],"417":[1,1,37,29],"425":[1,1,37,29],"433":[1,1,37,29],"441":[1,1,37,29],"449":[1,1,37,29],"457":[1,1,37,29],"465":[1,1,37,29],"473":[27,1,35,2],"481":[1,1,37,29],"489":[28,5,30,6],"497":[27,1,35,2],"505":[27,1,35,2],"513":[1,1,37,29],"521":[1,1,37,29],"nBranches":8,"originalCodeFileName":"/home/james/nodejs/HiPar/node_modules/lodash/isFunction.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/node_modules/lodash/isFunction_jalangi_.js","code":"var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n"};
jalangiLabel486:
    while (true) {
        try {
            J$.Se(417, '/home/james/nodejs/HiPar/node_modules/lodash/isFunction_jalangi_.js', '/home/james/nodejs/HiPar/node_modules/lodash/isFunction.js');
            function isFunction(value) {
                jalangiLabel485:
                    while (true) {
                        try {
                            J$.Fe(353, arguments.callee, this, arguments);
                            arguments = J$.N(361, 'arguments', arguments, 4);
                            value = J$.N(369, 'value', value, 4);
                            J$.N(377, 'tag', tag, 0);
                            if (J$.X1(489, J$.C(8, J$.U(10, '!', J$.F(201, J$.R(185, 'isObject', isObject, 1), 0)(J$.R(193, 'value', value, 0)))))) {
                                return J$.X1(225, J$.Rt(217, J$.T(209, false, 23, false)));
                            }
                            var tag = J$.X1(265, J$.W(257, 'tag', J$.F(249, J$.R(233, 'baseGetTag', baseGetTag, 1), 0)(J$.R(241, 'value', value, 0)), tag, 1));
                            return J$.X1(345, J$.Rt(337, J$.C(32, J$.C(24, J$.C(16, J$.B(18, '==', J$.R(273, 'tag', tag, 0), J$.R(281, 'funcTag', funcTag, 1), 0)) ? J$._() : J$.B(26, '==', J$.R(289, 'tag', tag, 0), J$.R(297, 'genTag', genTag, 1), 0)) ? J$._() : J$.B(34, '==', J$.R(305, 'tag', tag, 0), J$.R(313, 'asyncTag', asyncTag, 1), 0)) ? J$._() : J$.B(42, '==', J$.R(321, 'tag', tag, 0), J$.R(329, 'proxyTag', proxyTag, 1), 0)));
                        } catch (J$e) {
                            J$.Ex(497, J$e);
                        } finally {
                            if (J$.Fr(505))
                                continue jalangiLabel485;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(425, 'baseGetTag', baseGetTag, 0);
            J$.N(433, 'isObject', isObject, 0);
            J$.N(441, 'asyncTag', asyncTag, 0);
            J$.N(449, 'funcTag', funcTag, 0);
            J$.N(457, 'genTag', genTag, 0);
            J$.N(465, 'proxyTag', proxyTag, 0);
            isFunction = J$.N(481, 'isFunction', J$.T(473, isFunction, 12, false, 353), 0);
            var baseGetTag = J$.X1(65, J$.W(57, 'baseGetTag', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, './_baseGetTag', 21, false)), baseGetTag, 3)), isObject = J$.X1(81, J$.W(73, 'isObject', J$.F(49, J$.R(33, 'require', require, 2), 0)(J$.T(41, './isObject', 21, false)), isObject, 3));
            var asyncTag = J$.X1(129, J$.W(121, 'asyncTag', J$.T(89, '[object AsyncFunction]', 21, false), asyncTag, 3)), funcTag = J$.X1(145, J$.W(137, 'funcTag', J$.T(97, '[object Function]', 21, false), funcTag, 3)), genTag = J$.X1(161, J$.W(153, 'genTag', J$.T(105, '[object GeneratorFunction]', 21, false), genTag, 3)), proxyTag = J$.X1(177, J$.W(169, 'proxyTag', J$.T(113, '[object Proxy]', 21, false), proxyTag, 3));
            J$.X1(409, J$.P(401, J$.R(385, 'module', module, 2), 'exports', J$.R(393, 'isFunction', isFunction, 1), 0));
        } catch (J$e) {
            J$.Ex(513, J$e);
        } finally {
            if (J$.Sr(521)) {
                J$.L();
                continue jalangiLabel486;
            } else {
                J$.L();
                break jalangiLabel486;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
