J$.iids = {"9":[11,10,11,14],"17":[11,10,11,23],"25":[11,28,11,33],"33":[11,10,11,34],"35":[11,10,11,27],"41":[11,10,11,34],"49":[11,3,11,35],"57":[10,1,12,2],"65":[10,1,12,2],"73":[10,1,12,2],"81":[14,1,14,7],"89":[14,18,14,29],"97":[14,1,14,29],"105":[14,1,14,30],"113":[1,1,14,30],"121":[10,1,12,2],"129":[1,1,14,30],"137":[10,1,12,2],"145":[10,1,12,2],"153":[1,1,14,30],"161":[1,1,14,30],"nBranches":0,"originalCodeFileName":"/home/james/nodejs/HiPar/node_modules/lodash/_setCacheHas.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/node_modules/lodash/_setCacheHas_jalangi_.js","code":"/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;\n"};
jalangiLabel652:
    while (true) {
        try {
            J$.Se(113, '/home/james/nodejs/HiPar/node_modules/lodash/_setCacheHas_jalangi_.js', '/home/james/nodejs/HiPar/node_modules/lodash/_setCacheHas.js');
            function setCacheHas(value) {
                jalangiLabel651:
                    while (true) {
                        try {
                            J$.Fe(57, arguments.callee, this, arguments);
                            arguments = J$.N(65, 'arguments', arguments, 4);
                            value = J$.N(73, 'value', value, 4);
                            return J$.X1(49, J$.Rt(41, J$.M(33, J$.G(17, J$.R(9, 'this', this, 0), '__data__', 0), 'has', 0)(J$.R(25, 'value', value, 0))));
                        } catch (J$e) {
                            J$.Ex(137, J$e);
                        } finally {
                            if (J$.Fr(145))
                                continue jalangiLabel651;
                            else
                                return J$.Ra();
                        }
                    }
            }
            setCacheHas = J$.N(129, 'setCacheHas', J$.T(121, setCacheHas, 12, false, 57), 0);
            J$.X1(105, J$.P(97, J$.R(81, 'module', module, 2), 'exports', J$.R(89, 'setCacheHas', setCacheHas, 1), 0));
        } catch (J$e) {
            J$.Ex(153, J$e);
        } finally {
            if (J$.Sr(161)) {
                J$.L();
                continue jalangiLabel652;
            } else {
                J$.L();
                break jalangiLabel652;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
