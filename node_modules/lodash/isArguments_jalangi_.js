J$.iids = {"8":[32,12,32,71],"9":[1,23,1,30],"10":[33,5,33,48],"16":[32,12,33,48],"17":[1,31,1,51],"24":[31,19,31,69],"25":[1,23,1,52],"33":[2,16,2,23],"41":[2,24,2,40],"49":[2,16,2,41],"57":[1,23,1,52],"65":[1,23,1,52],"73":[2,16,2,41],"81":[2,16,2,41],"89":[5,19,5,25],"97":[5,19,5,35],"105":[5,19,5,35],"113":[5,19,5,35],"121":[8,22,8,33],"129":[8,22,8,48],"137":[8,22,8,48],"145":[8,22,8,48],"153":[11,28,11,39],"161":[11,28,11,60],"169":[11,28,11,60],"177":[11,28,11,60],"185":[31,19,31,34],"193":[31,55,31,64],"201":[31,55,31,64],"209":[31,48,31,65],"217":[31,35,31,66],"225":[31,35,31,66],"233":[31,35,31,66],"241":[31,35,31,68],"249":[31,19,31,69],"257":[31,72,31,87],"265":[32,12,32,24],"273":[32,25,32,30],"281":[32,12,32,31],"289":[32,35,32,49],"297":[32,55,32,60],"305":[32,62,32,70],"313":[32,35,32,71],"315":[32,35,32,54],"321":[33,6,33,26],"329":[33,32,33,37],"337":[33,39,33,47],"345":[33,6,33,48],"347":[33,6,33,31],"353":[32,12,33,48],"361":[32,5,33,49],"369":[31,90,34,2],"377":[31,90,34,2],"385":[31,90,34,2],"393":[31,90,34,2],"401":[31,19,34,2],"409":[31,19,34,2],"417":[36,1,36,7],"425":[36,18,36,29],"433":[36,1,36,29],"441":[36,1,36,30],"449":[1,1,36,30],"457":[1,1,36,30],"465":[1,1,36,30],"473":[1,1,36,30],"481":[1,1,36,30],"489":[1,1,36,30],"497":[1,1,36,30],"505":[31,35,31,66],"513":[31,35,31,66],"521":[31,90,34,2],"529":[31,90,34,2],"537":[31,19,34,2],"545":[1,1,36,30],"553":[1,1,36,30],"nBranches":6,"originalCodeFileName":"/home/james/nodejs/HiPar/node_modules/lodash/isArguments.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/node_modules/lodash/isArguments_jalangi_.js","code":"var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nmodule.exports = isArguments;\n"};
jalangiLabel550:
    while (true) {
        try {
            J$.Se(449, '/home/james/nodejs/HiPar/node_modules/lodash/isArguments_jalangi_.js', '/home/james/nodejs/HiPar/node_modules/lodash/isArguments.js');
            J$.N(457, 'baseIsArguments', baseIsArguments, 0);
            J$.N(465, 'isObjectLike', isObjectLike, 0);
            J$.N(473, 'objectProto', objectProto, 0);
            J$.N(481, 'hasOwnProperty', hasOwnProperty, 0);
            J$.N(489, 'propertyIsEnumerable', propertyIsEnumerable, 0);
            J$.N(497, 'isArguments', isArguments, 0);
            var baseIsArguments = J$.X1(65, J$.W(57, 'baseIsArguments', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, './_baseIsArguments', 21, false)), baseIsArguments, 3)), isObjectLike = J$.X1(81, J$.W(73, 'isObjectLike', J$.F(49, J$.R(33, 'require', require, 2), 0)(J$.T(41, './isObjectLike', 21, false)), isObjectLike, 3));
            var objectProto = J$.X1(113, J$.W(105, 'objectProto', J$.G(97, J$.R(89, 'Object', Object, 2), 'prototype', 0), objectProto, 3));
            var hasOwnProperty = J$.X1(145, J$.W(137, 'hasOwnProperty', J$.G(129, J$.R(121, 'objectProto', objectProto, 1), 'hasOwnProperty', 0), hasOwnProperty, 3));
            var propertyIsEnumerable = J$.X1(177, J$.W(169, 'propertyIsEnumerable', J$.G(161, J$.R(153, 'objectProto', objectProto, 1), 'propertyIsEnumerable', 0), propertyIsEnumerable, 3));
            var isArguments = J$.X1(409, J$.W(401, 'isArguments', J$.X1(537, J$.C(24, J$.F(249, J$.R(185, 'baseIsArguments', baseIsArguments, 1), 0)(J$.F(241, J$.T(233, function () {
                jalangiLabel548:
                    while (true) {
                        try {
                            J$.Fe(217, arguments.callee, this, arguments);
                            arguments = J$.N(225, 'arguments', arguments, 4);
                            return J$.X1(209, J$.Rt(201, J$.R(193, 'arguments', arguments, 2)));
                        } catch (J$e) {
                            J$.Ex(505, J$e);
                        } finally {
                            if (J$.Fr(513))
                                continue jalangiLabel548;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 217), 0)()))) ? J$.R(257, 'baseIsArguments', baseIsArguments, 1) : J$.T(393, function (value) {
                jalangiLabel549:
                    while (true) {
                        try {
                            J$.Fe(369, arguments.callee, this, arguments);
                            arguments = J$.N(377, 'arguments', arguments, 4);
                            value = J$.N(385, 'value', value, 4);
                            return J$.X1(361, J$.Rt(353, J$.C(16, J$.C(8, J$.F(281, J$.R(265, 'isObjectLike', isObjectLike, 1), 0)(J$.R(273, 'value', value, 0))) ? J$.M(313, J$.R(289, 'hasOwnProperty', hasOwnProperty, 1), 'call', 0)(J$.R(297, 'value', value, 0), J$.T(305, 'callee', 21, false)) : J$._()) ? J$.U(10, '!', J$.M(345, J$.R(321, 'propertyIsEnumerable', propertyIsEnumerable, 1), 'call', 0)(J$.R(329, 'value', value, 0), J$.T(337, 'callee', 21, false))) : J$._()));
                        } catch (J$e) {
                            J$.Ex(521, J$e);
                        } finally {
                            if (J$.Fr(529))
                                continue jalangiLabel549;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 369), isArguments, 3));
            J$.X1(441, J$.P(433, J$.R(417, 'module', module, 2), 'exports', J$.R(425, 'isArguments', isArguments, 1), 0));
        } catch (J$e) {
            J$.Ex(545, J$e);
        } finally {
            if (J$.Sr(553)) {
                J$.L();
                continue jalangiLabel550;
            } else {
                J$.L();
                break jalangiLabel550;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
