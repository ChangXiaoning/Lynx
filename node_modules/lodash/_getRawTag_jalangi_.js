J$.iids = {"8":[17,22,17,29],"9":[1,15,1,22],"10":[40,7,40,35],"16":[37,9,37,14],"17":[1,23,1,34],"24":[36,7,36,15],"25":[1,15,1,35],"33":[1,15,1,35],"41":[1,15,1,35],"49":[4,19,4,25],"57":[4,19,4,35],"65":[4,19,4,35],"73":[4,19,4,35],"81":[7,22,7,33],"89":[7,22,7,48],"97":[7,22,7,48],"105":[7,22,7,48],"113":[14,28,14,39],"121":[14,28,14,48],"129":[14,28,14,48],"137":[14,28,14,48],"145":[17,22,17,29],"153":[17,32,17,39],"161":[17,32,17,51],"169":[17,54,17,63],"177":[17,22,17,63],"185":[17,22,17,63],"193":[27,15,27,29],"201":[27,35,27,40],"209":[27,42,27,56],"217":[27,15,27,57],"219":[27,15,27,34],"225":[28,9,28,14],"233":[28,15,28,29],"241":[28,9,28,30],"249":[27,15,27,57],"257":[27,15,27,57],"265":[28,9,28,30],"273":[28,9,28,30],"281":[31,5,31,10],"289":[31,11,31,25],"297":[31,29,31,38],"305":[31,5,31,38],"313":[31,5,31,39],"321":[32,20,32,24],"329":[32,20,32,24],"337":[32,20,32,24],"345":[33,5,33,17],"353":[35,16,35,36],"361":[35,42,35,47],"369":[35,16,35,48],"371":[35,16,35,41],"377":[35,16,35,48],"385":[35,16,35,48],"393":[36,7,36,15],"401":[37,9,37,14],"409":[38,7,38,12],"417":[38,13,38,27],"425":[38,31,38,34],"433":[38,7,38,34],"441":[38,7,38,35],"449":[40,14,40,19],"457":[40,20,40,34],"465":[40,7,40,36],"473":[43,10,43,16],"481":[43,10,43,16],"489":[43,3,43,17],"497":[26,1,44,2],"505":[26,1,44,2],"513":[26,1,44,2],"521":[26,1,44,2],"529":[26,1,44,2],"537":[26,1,44,2],"545":[26,1,44,2],"553":[46,1,46,7],"561":[46,18,46,27],"569":[46,1,46,27],"577":[46,1,46,28],"585":[1,1,46,28],"593":[1,1,46,28],"601":[1,1,46,28],"609":[1,1,46,28],"617":[1,1,46,28],"625":[1,1,46,28],"633":[26,1,44,2],"641":[1,1,46,28],"649":[17,22,17,63],"657":[37,5,41,6],"665":[36,3,42,4],"673":[26,1,44,2],"681":[26,1,44,2],"689":[1,1,46,28],"697":[1,1,46,28],"nBranches":6,"originalCodeFileName":"/home/james/nodejs/HiPar/node_modules/lodash/_getRawTag.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/node_modules/lodash/_getRawTag_jalangi_.js","code":"var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n"};
jalangiLabel414:
    while (true) {
        try {
            J$.Se(585, '/home/james/nodejs/HiPar/node_modules/lodash/_getRawTag_jalangi_.js', '/home/james/nodejs/HiPar/node_modules/lodash/_getRawTag.js');
            function getRawTag(value) {
                jalangiLabel413:
                    while (true) {
                        try {
                            J$.Fe(497, arguments.callee, this, arguments);
                            arguments = J$.N(505, 'arguments', arguments, 4);
                            value = J$.N(513, 'value', value, 4);
                            J$.N(521, 'isOwn', isOwn, 0);
                            J$.N(529, 'tag', tag, 0);
                            J$.N(537, 'unmasked', unmasked, 0);
                            J$.N(545, 'result', result, 0);
                            var isOwn = J$.X1(257, J$.W(249, 'isOwn', J$.M(217, J$.R(193, 'hasOwnProperty', hasOwnProperty, 1), 'call', 0)(J$.R(201, 'value', value, 0), J$.R(209, 'symToStringTag', symToStringTag, 1)), isOwn, 1)), tag = J$.X1(273, J$.W(265, 'tag', J$.G(241, J$.R(225, 'value', value, 0), J$.R(233, 'symToStringTag', symToStringTag, 1), 4), tag, 1));
                            try {
                                J$.X1(313, J$.P(305, J$.R(281, 'value', value, 0), J$.R(289, 'symToStringTag', symToStringTag, 1), J$.T(297, undefined, 24, false), 2));
                                var unmasked = J$.X1(337, J$.W(329, 'unmasked', J$.T(321, true, 23, false), unmasked, 1));
                            } catch (e) {
                                e = J$.N(345, 'e', e, 1);
                            }
                            var result = J$.X1(385, J$.W(377, 'result', J$.M(369, J$.R(353, 'nativeObjectToString', nativeObjectToString, 1), 'call', 0)(J$.R(361, 'value', value, 0)), result, 1));
                            if (J$.X1(665, J$.C(24, J$.R(393, 'unmasked', unmasked, 0)))) {
                                if (J$.X1(657, J$.C(16, J$.R(401, 'isOwn', isOwn, 0)))) {
                                    J$.X1(441, J$.P(433, J$.R(409, 'value', value, 0), J$.R(417, 'symToStringTag', symToStringTag, 1), J$.R(425, 'tag', tag, 0), 2));
                                } else {
                                    J$.X1(465, J$.B(10, 'delete', J$.R(449, 'value', value, 0), J$.R(457, 'symToStringTag', symToStringTag, 1), 4));
                                }
                            }
                            return J$.X1(489, J$.Rt(481, J$.R(473, 'result', result, 0)));
                        } catch (J$e) {
                            J$.Ex(673, J$e);
                        } finally {
                            if (J$.Fr(681))
                                continue jalangiLabel413;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(593, '_Symbol', _Symbol, 0);
            J$.N(601, 'objectProto', objectProto, 0);
            J$.N(609, 'hasOwnProperty', hasOwnProperty, 0);
            J$.N(617, 'nativeObjectToString', nativeObjectToString, 0);
            J$.N(625, 'symToStringTag', symToStringTag, 0);
            getRawTag = J$.N(641, 'getRawTag', J$.T(633, getRawTag, 12, false, 497), 0);
            var _Symbol = J$.X1(41, J$.W(33, '_Symbol', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, './_Symbol', 21, false)), _Symbol, 3));
            var objectProto = J$.X1(73, J$.W(65, 'objectProto', J$.G(57, J$.R(49, 'Object', Object, 2), 'prototype', 0), objectProto, 3));
            var hasOwnProperty = J$.X1(105, J$.W(97, 'hasOwnProperty', J$.G(89, J$.R(81, 'objectProto', objectProto, 1), 'hasOwnProperty', 0), hasOwnProperty, 3));
            var nativeObjectToString = J$.X1(137, J$.W(129, 'nativeObjectToString', J$.G(121, J$.R(113, 'objectProto', objectProto, 1), 'toString', 0), nativeObjectToString, 3));
            var symToStringTag = J$.X1(185, J$.W(177, 'symToStringTag', J$.X1(649, J$.C(8, J$.R(145, '_Symbol', _Symbol, 1))) ? J$.G(161, J$.R(153, '_Symbol', _Symbol, 1), 'toStringTag', 0) : J$.T(169, undefined, 24, false), symToStringTag, 3));
            J$.X1(577, J$.P(569, J$.R(553, 'module', module, 2), 'exports', J$.R(561, 'getRawTag', getRawTag, 1), 0));
        } catch (J$e) {
            J$.Ex(689, J$e);
        } finally {
            if (J$.Sr(697)) {
                J$.L();
                continue jalangiLabel414;
            } else {
                J$.L();
                break jalangiLabel414;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
