{"8":[18,7,18,27],"9":[1,19,1,26],"10":[18,7,18,27],"16":[23,9,23,65],"17":[1,27,1,43],"18":[23,45,23,65],"24":[23,9,23,65],"25":[1,19,1,44],"33":[2,14,2,21],"41":[2,22,2,37],"49":[2,14,2,38],"57":[1,19,1,44],"65":[1,19,1,44],"73":[2,14,2,38],"81":[2,14,2,38],"89":[5,19,5,25],"97":[5,19,5,35],"105":[5,19,5,35],"113":[5,19,5,35],"121":[8,22,8,33],"129":[8,22,8,48],"137":[8,22,8,48],"145":[8,22,8,48],"153":[18,8,18,19],"161":[18,20,18,26],"169":[18,8,18,27],"177":[19,12,19,22],"185":[19,23,19,29],"193":[19,12,19,30],"201":[19,12,19,30],"209":[19,5,19,31],"217":[21,16,21,18],"225":[21,16,21,18],"233":[21,16,21,18],"241":[22,19,22,25],"249":[22,26,22,32],"257":[22,19,22,33],"265":[23,9,23,23],"273":[23,29,23,35],"281":[23,37,23,40],"289":[23,9,23,41],"291":[23,9,23,28],"297":[23,45,23,48],"305":[23,52,23,65],"313":[24,7,24,13],"321":[24,19,24,22],"329":[24,7,24,23],"331":[24,7,24,18],"337":[24,7,24,24],"345":[22,19,22,33],"353":[22,3,26,4],"361":[22,3,26,4],"369":[27,10,27,16],"377":[27,10,27,16],"385":[27,3,27,17],"393":[17,1,28,2],"401":[17,1,28,2],"409":[17,1,28,2],"417":[17,1,28,2],"425":[17,1,28,2],"433":[30,1,30,7],"441":[30,18,30,26],"449":[30,1,30,26],"457":[30,1,30,27],"465":[1,1,30,27],"473":[1,1,30,27],"481":[1,1,30,27],"489":[1,1,30,27],"497":[1,1,30,27],"505":[17,1,28,2],"513":[1,1,30,27],"521":[18,3,20,4],"529":[23,5,25,6],"537":[17,1,28,2],"545":[17,1,28,2],"553":[1,1,30,27],"561":[1,1,30,27],"nBranches":6,"originalCodeFileName":"/home/james/nodejs/HiPar/node_modules/lodash/_baseKeys.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/node_modules/lodash/_baseKeys_jalangi_.js","code":"var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeys;\n"}