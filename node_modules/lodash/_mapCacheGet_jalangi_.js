J$.iids = {"9":[1,18,1,25],"17":[1,26,1,41],"25":[1,18,1,42],"33":[1,18,1,42],"41":[1,18,1,42],"49":[13,10,13,20],"57":[13,21,13,25],"65":[13,27,13,30],"73":[13,10,13,31],"81":[13,36,13,39],"89":[13,10,13,40],"91":[13,10,13,35],"97":[13,10,13,40],"105":[13,3,13,41],"113":[12,1,14,2],"121":[12,1,14,2],"129":[12,1,14,2],"137":[16,1,16,7],"145":[16,18,16,29],"153":[16,1,16,29],"161":[16,1,16,30],"169":[1,1,16,30],"177":[1,1,16,30],"185":[12,1,14,2],"193":[1,1,16,30],"201":[12,1,14,2],"209":[12,1,14,2],"217":[1,1,16,30],"225":[1,1,16,30],"nBranches":0,"originalCodeFileName":"/home/james/nodejs/HiPar/node_modules/lodash/_mapCacheGet.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/node_modules/lodash/_mapCacheGet_jalangi_.js","code":"var getMapData = require('./_getMapData');\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;\n"};
jalangiLabel525:
    while (true) {
        try {
            J$.Se(169, '/home/james/nodejs/HiPar/node_modules/lodash/_mapCacheGet_jalangi_.js', '/home/james/nodejs/HiPar/node_modules/lodash/_mapCacheGet.js');
            function mapCacheGet(key) {
                jalangiLabel524:
                    while (true) {
                        try {
                            J$.Fe(113, arguments.callee, this, arguments);
                            arguments = J$.N(121, 'arguments', arguments, 4);
                            key = J$.N(129, 'key', key, 4);
                            return J$.X1(105, J$.Rt(97, J$.M(89, J$.F(73, J$.R(49, 'getMapData', getMapData, 1), 0)(J$.R(57, 'this', this, 0), J$.R(65, 'key', key, 0)), 'get', 0)(J$.R(81, 'key', key, 0))));
                        } catch (J$e) {
                            J$.Ex(201, J$e);
                        } finally {
                            if (J$.Fr(209))
                                continue jalangiLabel524;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(177, 'getMapData', getMapData, 0);
            mapCacheGet = J$.N(193, 'mapCacheGet', J$.T(185, mapCacheGet, 12, false, 113), 0);
            var getMapData = J$.X1(41, J$.W(33, 'getMapData', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, './_getMapData', 21, false)), getMapData, 3));
            J$.X1(161, J$.P(153, J$.R(137, 'module', module, 2), 'exports', J$.R(145, 'mapCacheGet', mapCacheGet, 1), 0));
        } catch (J$e) {
            J$.Ex(217, J$e);
        } finally {
            if (J$.Sr(225)) {
                J$.L();
                continue jalangiLabel525;
            } else {
                J$.L();
                break jalangiLabel525;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
