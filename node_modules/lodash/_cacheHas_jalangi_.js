J$.iids = {"9":[10,10,10,15],"17":[10,20,10,23],"25":[10,10,10,24],"27":[10,10,10,19],"33":[10,10,10,24],"41":[10,3,10,25],"49":[9,1,11,2],"57":[9,1,11,2],"65":[9,1,11,2],"73":[9,1,11,2],"81":[13,1,13,7],"89":[13,18,13,26],"97":[13,1,13,26],"105":[13,1,13,27],"113":[1,1,13,27],"121":[9,1,11,2],"129":[1,1,13,27],"137":[9,1,11,2],"145":[9,1,11,2],"153":[1,1,13,27],"161":[1,1,13,27],"nBranches":0,"originalCodeFileName":"/home/james/nodejs/HiPar/node_modules/lodash/_cacheHas.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/node_modules/lodash/_cacheHas_jalangi_.js","code":"/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;\n"};
jalangiLabel666:
    while (true) {
        try {
            J$.Se(113, '/home/james/nodejs/HiPar/node_modules/lodash/_cacheHas_jalangi_.js', '/home/james/nodejs/HiPar/node_modules/lodash/_cacheHas.js');
            function cacheHas(cache, key) {
                jalangiLabel665:
                    while (true) {
                        try {
                            J$.Fe(49, arguments.callee, this, arguments);
                            arguments = J$.N(57, 'arguments', arguments, 4);
                            cache = J$.N(65, 'cache', cache, 4);
                            key = J$.N(73, 'key', key, 4);
                            return J$.X1(41, J$.Rt(33, J$.M(25, J$.R(9, 'cache', cache, 0), 'has', 0)(J$.R(17, 'key', key, 0))));
                        } catch (J$e) {
                            J$.Ex(137, J$e);
                        } finally {
                            if (J$.Fr(145))
                                continue jalangiLabel665;
                            else
                                return J$.Ra();
                        }
                    }
            }
            cacheHas = J$.N(129, 'cacheHas', J$.T(121, cacheHas, 12, false, 49), 0);
            J$.X1(105, J$.P(97, J$.R(81, 'module', module, 2), 'exports', J$.R(89, 'cacheHas', cacheHas, 1), 0));
        } catch (J$e) {
            J$.Ex(153, J$e);
        } finally {
            if (J$.Sr(161)) {
                J$.L();
                continue jalangiLabel666;
            } else {
                J$.L();
                break jalangiLabel666;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
