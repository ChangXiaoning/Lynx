J$.iids = {"9":[9,10,9,15],"10":[9,10,9,25],"17":[9,20,9,25],"25":[9,10,9,25],"33":[9,3,9,26],"41":[8,1,10,2],"49":[8,1,10,2],"57":[8,1,10,2],"65":[12,1,12,7],"73":[12,18,12,27],"81":[12,1,12,27],"89":[12,1,12,28],"97":[1,1,12,28],"105":[8,1,10,2],"113":[1,1,12,28],"121":[8,1,10,2],"129":[8,1,10,2],"137":[1,1,12,28],"145":[1,1,12,28],"nBranches":0,"originalCodeFileName":"/home/james/nodejs/HiPar/node_modules/lodash/_baseIsNaN.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/node_modules/lodash/_baseIsNaN_jalangi_.js","code":"/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\nmodule.exports = baseIsNaN;\n"};
jalangiLabel660:
    while (true) {
        try {
            J$.Se(97, '/home/james/nodejs/HiPar/node_modules/lodash/_baseIsNaN_jalangi_.js', '/home/james/nodejs/HiPar/node_modules/lodash/_baseIsNaN.js');
            function baseIsNaN(value) {
                jalangiLabel659:
                    while (true) {
                        try {
                            J$.Fe(41, arguments.callee, this, arguments);
                            arguments = J$.N(49, 'arguments', arguments, 4);
                            value = J$.N(57, 'value', value, 4);
                            return J$.X1(33, J$.Rt(25, J$.B(10, '!==', J$.R(9, 'value', value, 0), J$.R(17, 'value', value, 0), 0)));
                        } catch (J$e) {
                            J$.Ex(121, J$e);
                        } finally {
                            if (J$.Fr(129))
                                continue jalangiLabel659;
                            else
                                return J$.Ra();
                        }
                    }
            }
            baseIsNaN = J$.N(113, 'baseIsNaN', J$.T(105, baseIsNaN, 12, false, 41), 0);
            J$.X1(89, J$.P(81, J$.R(65, 'module', module, 2), 'exports', J$.R(73, 'baseIsNaN', baseIsNaN, 1), 0));
        } catch (J$e) {
            J$.Ex(137, J$e);
        } finally {
            if (J$.Sr(145)) {
                J$.L();
                continue jalangiLabel660;
            } else {
                J$.L();
                break jalangiLabel660;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
