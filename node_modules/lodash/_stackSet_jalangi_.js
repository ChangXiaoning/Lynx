J$.iids = {"8":[22,9,22,52],"9":[1,17,1,24],"10":[20,7,20,32],"16":[22,9,22,52],"17":[1,25,1,39],"18":[22,9,22,13],"24":[20,7,20,32],"25":[1,17,1,40],"26":[22,32,22,52],"33":[2,7,2,14],"34":[22,17,22,52],"41":[2,15,2,23],"49":[2,7,2,24],"57":[3,12,3,19],"65":[3,20,3,33],"73":[3,12,3,34],"81":[1,17,1,40],"89":[1,17,1,40],"97":[2,7,2,24],"105":[2,7,2,24],"113":[3,12,3,34],"121":[3,12,3,34],"129":[6,24,6,27],"137":[6,24,6,27],"145":[6,24,6,27],"153":[19,14,19,18],"161":[19,14,19,27],"169":[19,14,19,27],"177":[19,14,19,27],"185":[20,7,20,11],"193":[20,23,20,32],"201":[21,17,21,21],"209":[21,17,21,30],"217":[21,17,21,30],"225":[21,17,21,30],"233":[22,10,22,13],"241":[22,17,22,22],"249":[22,17,22,29],"257":[22,32,22,48],"265":[22,51,22,52],"273":[23,7,23,12],"281":[23,19,23,22],"289":[23,24,23,29],"297":[23,18,23,30],"305":[23,7,23,31],"307":[23,7,23,17],"313":[23,7,23,32],"321":[24,7,24,11],"329":[24,21,24,25],"345":[24,19,24,30],"347":[24,19,24,30],"353":[24,7,24,30],"361":[24,7,24,31],"369":[25,14,25,18],"377":[25,14,25,18],"385":[25,7,25,19],"393":[27,12,27,16],"401":[27,32,27,40],"409":[27,41,27,46],"417":[27,28,27,47],"425":[27,12,27,47],"433":[27,12,27,47],"441":[27,5,27,48],"449":[29,3,29,7],"457":[29,12,29,15],"465":[29,17,29,22],"473":[29,3,29,23],"475":[29,3,29,11],"481":[29,3,29,24],"489":[30,3,30,7],"497":[30,15,30,19],"505":[30,15,30,24],"513":[30,3,30,24],"521":[30,3,30,25],"529":[31,10,31,14],"537":[31,10,31,14],"545":[31,3,31,15],"553":[18,1,32,2],"561":[18,1,32,2],"569":[18,1,32,2],"577":[18,1,32,2],"585":[18,1,32,2],"593":[18,1,32,2],"601":[34,1,34,7],"609":[34,18,34,26],"617":[34,1,34,26],"625":[34,1,34,27],"633":[1,1,34,27],"641":[1,1,34,27],"649":[1,1,34,27],"657":[1,1,34,27],"665":[1,1,34,27],"673":[18,1,32,2],"681":[1,1,34,27],"689":[22,5,26,6],"697":[20,3,28,4],"705":[18,1,32,2],"713":[18,1,32,2],"721":[1,1,34,27],"729":[1,1,34,27],"nBranches":6,"originalCodeFileName":"/home/james/nodejs/HiPar/node_modules/lodash/_stackSet.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/node_modules/lodash/_stackSet_jalangi_.js","code":"var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;\n"};
jalangiLabel479:
    while (true) {
        try {
            J$.Se(633, '/home/james/nodejs/HiPar/node_modules/lodash/_stackSet_jalangi_.js', '/home/james/nodejs/HiPar/node_modules/lodash/_stackSet.js');
            function stackSet(key, value) {
                jalangiLabel478:
                    while (true) {
                        try {
                            J$.Fe(553, arguments.callee, this, arguments);
                            arguments = J$.N(561, 'arguments', arguments, 4);
                            key = J$.N(569, 'key', key, 4);
                            value = J$.N(577, 'value', value, 4);
                            J$.N(585, 'data', data, 0);
                            J$.N(593, 'pairs', pairs, 0);
                            var data = J$.X1(177, J$.W(169, 'data', J$.G(161, J$.R(153, 'this', this, 0), '__data__', 0), data, 1));
                            if (J$.X1(697, J$.C(24, J$.B(10, 'instanceof', J$.R(185, 'data', data, 0), J$.R(193, 'ListCache', ListCache, 1), 0)))) {
                                var pairs = J$.X1(225, J$.W(217, 'pairs', J$.G(209, J$.R(201, 'data', data, 0), '__data__', 0), pairs, 1));
                                if (J$.X1(689, J$.C(16, J$.C(8, J$.U(18, '!', J$.R(233, 'Map', Map, 1))) ? J$._() : J$.B(34, '<', J$.G(249, J$.R(241, 'pairs', pairs, 0), 'length', 0), J$.B(26, '-', J$.R(257, 'LARGE_ARRAY_SIZE', LARGE_ARRAY_SIZE, 1), J$.T(265, 1, 22, false), 0), 0)))) {
                                    J$.X1(313, J$.M(305, J$.R(273, 'pairs', pairs, 0), 'push', 0)(J$.T(297, [
                                        J$.R(281, 'key', key, 0),
                                        J$.R(289, 'value', value, 0)
                                    ], 10, false)));
                                    J$.X1(361, J$.P(353, J$.R(321, 'this', this, 0), 'size', J$.A(345, J$.R(329, 'data', data, 0), 'size', '+', 0)(J$.T(337, 1, 22, false)), 0));
                                    return J$.X1(385, J$.Rt(377, J$.R(369, 'this', this, 0)));
                                }
                                J$.X1(441, data = J$.W(433, 'data', J$.P(425, J$.R(393, 'this', this, 0), '__data__', J$.F(417, J$.R(401, 'MapCache', MapCache, 1), 1)(J$.R(409, 'pairs', pairs, 0)), 0), data, 0));
                            }
                            J$.X1(481, J$.M(473, J$.R(449, 'data', data, 0), 'set', 0)(J$.R(457, 'key', key, 0), J$.R(465, 'value', value, 0)));
                            J$.X1(521, J$.P(513, J$.R(489, 'this', this, 0), 'size', J$.G(505, J$.R(497, 'data', data, 0), 'size', 0), 0));
                            return J$.X1(545, J$.Rt(537, J$.R(529, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(705, J$e);
                        } finally {
                            if (J$.Fr(713))
                                continue jalangiLabel478;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(641, 'ListCache', ListCache, 0);
            J$.N(649, 'Map', Map, 0);
            J$.N(657, 'MapCache', MapCache, 0);
            J$.N(665, 'LARGE_ARRAY_SIZE', LARGE_ARRAY_SIZE, 0);
            stackSet = J$.N(681, 'stackSet', J$.T(673, stackSet, 12, false, 553), 0);
            var ListCache = J$.X1(89, J$.W(81, 'ListCache', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, './_ListCache', 21, false)), ListCache, 3)), Map = J$.X1(105, J$.W(97, 'Map', J$.F(49, J$.R(33, 'require', require, 2), 0)(J$.T(41, './_Map', 21, false)), Map, 3)), MapCache = J$.X1(121, J$.W(113, 'MapCache', J$.F(73, J$.R(57, 'require', require, 2), 0)(J$.T(65, './_MapCache', 21, false)), MapCache, 3));
            var LARGE_ARRAY_SIZE = J$.X1(145, J$.W(137, 'LARGE_ARRAY_SIZE', J$.T(129, 200, 22, false), LARGE_ARRAY_SIZE, 3));
            J$.X1(625, J$.P(617, J$.R(601, 'module', module, 2), 'exports', J$.R(609, 'stackSet', stackSet, 1), 0));
        } catch (J$e) {
            J$.Ex(721, J$e);
        } finally {
            if (J$.Sr(729)) {
                J$.L();
                continue jalangiLabel479;
            } else {
                J$.L();
                break jalangiLabel479;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
