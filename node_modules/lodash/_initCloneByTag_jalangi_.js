J$.iids = {"8":[43,11,43,14],"9":[1,24,1,31],"10":[49,23,49,30],"16":[44,10,44,24],"17":[1,32,1,53],"24":[47,10,47,17],"25":[1,24,1,54],"32":[48,10,48,17],"33":[2,17,2,24],"40":[51,10,51,21],"41":[2,25,2,43],"48":[54,10,54,20],"49":[2,17,2,44],"56":[54,26,54,36],"57":[3,15,3,22],"64":[55,10,55,17],"65":[3,23,3,39],"72":[55,23,55,31],"73":[3,15,3,40],"80":[55,37,55,45],"81":[4,15,4,22],"88":[56,10,56,18],"89":[4,23,4,39],"96":[56,24,56,39],"97":[4,15,4,40],"104":[56,45,56,54],"105":[5,19,5,26],"112":[56,60,56,69],"113":[5,27,5,47],"120":[59,10,59,16],"121":[5,19,5,48],"128":[62,10,62,19],"129":[1,24,1,54],"136":[63,10,63,19],"137":[1,24,1,54],"144":[66,10,66,19],"145":[2,17,2,44],"152":[69,10,69,16],"153":[2,17,2,44],"160":[72,10,72,19],"161":[3,15,3,40],"169":[3,15,3,40],"177":[4,15,4,40],"185":[4,15,4,40],"193":[5,19,5,48],"201":[5,19,5,48],"209":[8,15,8,33],"217":[9,11,9,26],"225":[10,10,10,24],"233":[11,13,11,30],"241":[12,13,12,30],"249":[13,10,13,24],"257":[14,13,14,30],"265":[15,13,15,30],"273":[8,15,8,33],"281":[8,15,8,33],"289":[9,11,9,26],"297":[9,11,9,26],"305":[10,10,10,24],"313":[10,10,10,24],"321":[11,13,11,30],"329":[11,13,11,30],"337":[12,13,12,30],"345":[12,13,12,30],"353":[13,10,13,24],"361":[13,10,13,24],"369":[14,13,14,30],"377":[14,13,14,30],"385":[15,13,15,30],"393":[15,13,15,30],"401":[17,22,17,44],"409":[18,15,18,34],"417":[19,14,19,37],"425":[20,14,20,37],"433":[21,11,21,31],"441":[22,12,22,33],"449":[23,12,23,33],"457":[24,12,24,33],"465":[25,19,25,47],"473":[26,13,26,35],"481":[27,13,27,35],"489":[17,22,17,44],"497":[17,22,17,44],"505":[18,15,18,34],"513":[18,15,18,34],"521":[19,14,19,37],"529":[19,14,19,37],"537":[20,14,20,37],"545":[20,14,20,37],"553":[21,11,21,31],"561":[21,11,21,31],"569":[22,12,22,33],"577":[22,12,22,33],"585":[23,12,23,33],"593":[23,12,23,33],"601":[24,12,24,33],"609":[24,12,24,33],"617":[25,19,25,47],"625":[25,19,25,47],"633":[26,13,26,35],"641":[26,13,26,35],"649":[27,13,27,35],"657":[27,13,27,35],"665":[42,14,42,20],"673":[42,14,42,32],"681":[42,14,42,32],"689":[42,14,42,32],"697":[43,11,43,14],"705":[45,14,45,30],"713":[45,31,45,37],"721":[45,14,45,38],"729":[45,14,45,38],"737":[45,7,45,39],"745":[44,10,44,24],"753":[47,10,47,17],"761":[49,18,49,22],"769":[49,24,49,30],"777":[49,14,49,31],"785":[49,14,49,31],"793":[49,7,49,32],"801":[48,10,48,17],"809":[52,14,52,27],"817":[52,28,52,34],"825":[52,36,52,42],"833":[52,14,52,43],"841":[52,14,52,43],"849":[52,7,52,44],"857":[51,10,51,21],"865":[54,10,54,20],"873":[54,26,54,36],"881":[55,10,55,17],"889":[55,23,55,31],"897":[55,37,55,45],"905":[56,10,56,18],"913":[56,24,56,39],"921":[56,45,56,54],"929":[57,14,57,29],"937":[57,30,57,36],"945":[57,38,57,44],"953":[57,14,57,45],"961":[57,14,57,45],"969":[57,7,57,46],"977":[56,60,56,69],"985":[60,18,60,22],"993":[60,14,60,24],"1001":[60,14,60,24],"1009":[60,7,60,25],"1017":[59,10,59,16],"1025":[62,10,62,19],"1033":[64,18,64,22],"1041":[64,23,64,29],"1049":[64,14,64,30],"1057":[64,14,64,30],"1065":[64,7,64,31],"1073":[63,10,63,19],"1081":[67,14,67,25],"1089":[67,26,67,32],"1097":[67,14,67,33],"1105":[67,14,67,33],"1113":[67,7,67,34],"1121":[66,10,66,19],"1129":[70,18,70,22],"1137":[70,14,70,24],"1145":[70,14,70,24],"1153":[70,7,70,25],"1161":[69,10,69,16],"1169":[73,14,73,25],"1177":[73,26,73,32],"1185":[73,14,73,33],"1193":[73,14,73,33],"1201":[73,7,73,34],"1209":[72,10,72,19],"1217":[41,1,75,2],"1225":[41,1,75,2],"1233":[41,1,75,2],"1241":[41,1,75,2],"1249":[41,1,75,2],"1257":[41,1,75,2],"1265":[77,1,77,7],"1273":[77,18,77,32],"1281":[77,1,77,32],"1289":[77,1,77,33],"1297":[1,1,77,33],"1305":[1,1,77,33],"1313":[1,1,77,33],"1321":[1,1,77,33],"1329":[1,1,77,33],"1337":[1,1,77,33],"1345":[1,1,77,33],"1353":[1,1,77,33],"1361":[1,1,77,33],"1369":[1,1,77,33],"1377":[1,1,77,33],"1385":[1,1,77,33],"1393":[1,1,77,33],"1401":[1,1,77,33],"1409":[1,1,77,33],"1417":[1,1,77,33],"1425":[1,1,77,33],"1433":[1,1,77,33],"1441":[1,1,77,33],"1449":[1,1,77,33],"1457":[1,1,77,33],"1465":[1,1,77,33],"1473":[1,1,77,33],"1481":[1,1,77,33],"1489":[1,1,77,33],"1497":[41,1,75,2],"1505":[1,1,77,33],"1513":[43,11,43,14],"1521":[44,10,44,24],"1529":[47,10,47,17],"1537":[48,10,48,17],"1545":[51,10,51,21],"1553":[54,10,54,20],"1561":[54,26,54,36],"1569":[55,10,55,17],"1577":[55,23,55,31],"1585":[55,37,55,45],"1593":[56,10,56,18],"1601":[56,24,56,39],"1609":[56,45,56,54],"1617":[56,60,56,69],"1625":[59,10,59,16],"1633":[62,10,62,19],"1641":[63,10,63,19],"1649":[66,10,66,19],"1657":[69,10,69,16],"1665":[72,10,72,19],"1673":[41,1,75,2],"1681":[41,1,75,2],"1689":[1,1,77,33],"1697":[1,1,77,33],"nBranches":40,"originalCodeFileName":"/home/james/nodejs/HiPar/node_modules/lodash/_initCloneByTag.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/node_modules/lodash/_initCloneByTag_jalangi_.js","code":"var cloneArrayBuffer = require('./_cloneArrayBuffer'),\n    cloneDataView = require('./_cloneDataView'),\n    cloneRegExp = require('./_cloneRegExp'),\n    cloneSymbol = require('./_cloneSymbol'),\n    cloneTypedArray = require('./_cloneTypedArray');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nmodule.exports = initCloneByTag;\n"};
jalangiLabel619:
    while (true) {
        try {
            J$.Se(1297, '/home/james/nodejs/HiPar/node_modules/lodash/_initCloneByTag_jalangi_.js', '/home/james/nodejs/HiPar/node_modules/lodash/_initCloneByTag.js');
            function initCloneByTag(object, tag, isDeep) {
                jalangiLabel618:
                    while (true) {
                        try {
                            J$.Fe(1217, arguments.callee, this, arguments);
                            arguments = J$.N(1225, 'arguments', arguments, 4);
                            object = J$.N(1233, 'object', object, 4);
                            tag = J$.N(1241, 'tag', tag, 4);
                            isDeep = J$.N(1249, 'isDeep', isDeep, 4);
                            J$.N(1257, 'Ctor', Ctor, 0);
                            var Ctor = J$.X1(689, J$.W(681, 'Ctor', J$.G(673, J$.R(665, 'object', object, 0), 'constructor', 0), Ctor, 1));
                            switch (J$.X1(1513, J$.C1(8, J$.R(697, 'tag', tag, 0)))) {
                            case J$.X1(1521, J$.C2(16, J$.R(745, 'arrayBufferTag', arrayBufferTag, 1))):
                                return J$.X1(737, J$.Rt(729, J$.F(721, J$.R(705, 'cloneArrayBuffer', cloneArrayBuffer, 1), 0)(J$.R(713, 'object', object, 0))));
                            case J$.X1(1529, J$.C2(24, J$.R(753, 'boolTag', boolTag, 1))):
                            case J$.X1(1537, J$.C2(32, J$.R(801, 'dateTag', dateTag, 1))):
                                return J$.X1(793, J$.Rt(785, J$.F(777, J$.R(761, 'Ctor', Ctor, 0), 1)(J$.U(10, '+', J$.R(769, 'object', object, 0)))));
                            case J$.X1(1545, J$.C2(40, J$.R(857, 'dataViewTag', dataViewTag, 1))):
                                return J$.X1(849, J$.Rt(841, J$.F(833, J$.R(809, 'cloneDataView', cloneDataView, 1), 0)(J$.R(817, 'object', object, 0), J$.R(825, 'isDeep', isDeep, 0))));
                            case J$.X1(1553, J$.C2(48, J$.R(865, 'float32Tag', float32Tag, 1))):
                            case J$.X1(1561, J$.C2(56, J$.R(873, 'float64Tag', float64Tag, 1))):
                            case J$.X1(1569, J$.C2(64, J$.R(881, 'int8Tag', int8Tag, 1))):
                            case J$.X1(1577, J$.C2(72, J$.R(889, 'int16Tag', int16Tag, 1))):
                            case J$.X1(1585, J$.C2(80, J$.R(897, 'int32Tag', int32Tag, 1))):
                            case J$.X1(1593, J$.C2(88, J$.R(905, 'uint8Tag', uint8Tag, 1))):
                            case J$.X1(1601, J$.C2(96, J$.R(913, 'uint8ClampedTag', uint8ClampedTag, 1))):
                            case J$.X1(1609, J$.C2(104, J$.R(921, 'uint16Tag', uint16Tag, 1))):
                            case J$.X1(1617, J$.C2(112, J$.R(977, 'uint32Tag', uint32Tag, 1))):
                                return J$.X1(969, J$.Rt(961, J$.F(953, J$.R(929, 'cloneTypedArray', cloneTypedArray, 1), 0)(J$.R(937, 'object', object, 0), J$.R(945, 'isDeep', isDeep, 0))));
                            case J$.X1(1625, J$.C2(120, J$.R(1017, 'mapTag', mapTag, 1))):
                                return J$.X1(1009, J$.Rt(1001, J$.F(993, J$.R(985, 'Ctor', Ctor, 0), 1)()));
                            case J$.X1(1633, J$.C2(128, J$.R(1025, 'numberTag', numberTag, 1))):
                            case J$.X1(1641, J$.C2(136, J$.R(1073, 'stringTag', stringTag, 1))):
                                return J$.X1(1065, J$.Rt(1057, J$.F(1049, J$.R(1033, 'Ctor', Ctor, 0), 1)(J$.R(1041, 'object', object, 0))));
                            case J$.X1(1649, J$.C2(144, J$.R(1121, 'regexpTag', regexpTag, 1))):
                                return J$.X1(1113, J$.Rt(1105, J$.F(1097, J$.R(1081, 'cloneRegExp', cloneRegExp, 1), 0)(J$.R(1089, 'object', object, 0))));
                            case J$.X1(1657, J$.C2(152, J$.R(1161, 'setTag', setTag, 1))):
                                return J$.X1(1153, J$.Rt(1145, J$.F(1137, J$.R(1129, 'Ctor', Ctor, 0), 1)()));
                            case J$.X1(1665, J$.C2(160, J$.R(1209, 'symbolTag', symbolTag, 1))):
                                return J$.X1(1201, J$.Rt(1193, J$.F(1185, J$.R(1169, 'cloneSymbol', cloneSymbol, 1), 0)(J$.R(1177, 'object', object, 0))));
                            }
                        } catch (J$e) {
                            J$.Ex(1673, J$e);
                        } finally {
                            if (J$.Fr(1681))
                                continue jalangiLabel618;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(1305, 'cloneArrayBuffer', cloneArrayBuffer, 0);
            J$.N(1313, 'cloneDataView', cloneDataView, 0);
            J$.N(1321, 'cloneRegExp', cloneRegExp, 0);
            J$.N(1329, 'cloneSymbol', cloneSymbol, 0);
            J$.N(1337, 'cloneTypedArray', cloneTypedArray, 0);
            J$.N(1345, 'boolTag', boolTag, 0);
            J$.N(1353, 'dateTag', dateTag, 0);
            J$.N(1361, 'mapTag', mapTag, 0);
            J$.N(1369, 'numberTag', numberTag, 0);
            J$.N(1377, 'regexpTag', regexpTag, 0);
            J$.N(1385, 'setTag', setTag, 0);
            J$.N(1393, 'stringTag', stringTag, 0);
            J$.N(1401, 'symbolTag', symbolTag, 0);
            J$.N(1409, 'arrayBufferTag', arrayBufferTag, 0);
            J$.N(1417, 'dataViewTag', dataViewTag, 0);
            J$.N(1425, 'float32Tag', float32Tag, 0);
            J$.N(1433, 'float64Tag', float64Tag, 0);
            J$.N(1441, 'int8Tag', int8Tag, 0);
            J$.N(1449, 'int16Tag', int16Tag, 0);
            J$.N(1457, 'int32Tag', int32Tag, 0);
            J$.N(1465, 'uint8Tag', uint8Tag, 0);
            J$.N(1473, 'uint8ClampedTag', uint8ClampedTag, 0);
            J$.N(1481, 'uint16Tag', uint16Tag, 0);
            J$.N(1489, 'uint32Tag', uint32Tag, 0);
            initCloneByTag = J$.N(1505, 'initCloneByTag', J$.T(1497, initCloneByTag, 12, false, 1217), 0);
            var cloneArrayBuffer = J$.X1(137, J$.W(129, 'cloneArrayBuffer', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, './_cloneArrayBuffer', 21, false)), cloneArrayBuffer, 3)), cloneDataView = J$.X1(153, J$.W(145, 'cloneDataView', J$.F(49, J$.R(33, 'require', require, 2), 0)(J$.T(41, './_cloneDataView', 21, false)), cloneDataView, 3)), cloneRegExp = J$.X1(169, J$.W(161, 'cloneRegExp', J$.F(73, J$.R(57, 'require', require, 2), 0)(J$.T(65, './_cloneRegExp', 21, false)), cloneRegExp, 3)), cloneSymbol = J$.X1(185, J$.W(177, 'cloneSymbol', J$.F(97, J$.R(81, 'require', require, 2), 0)(J$.T(89, './_cloneSymbol', 21, false)), cloneSymbol, 3)), cloneTypedArray = J$.X1(201, J$.W(193, 'cloneTypedArray', J$.F(121, J$.R(105, 'require', require, 2), 0)(J$.T(113, './_cloneTypedArray', 21, false)), cloneTypedArray, 3));
            var boolTag = J$.X1(281, J$.W(273, 'boolTag', J$.T(209, '[object Boolean]', 21, false), boolTag, 3)), dateTag = J$.X1(297, J$.W(289, 'dateTag', J$.T(217, '[object Date]', 21, false), dateTag, 3)), mapTag = J$.X1(313, J$.W(305, 'mapTag', J$.T(225, '[object Map]', 21, false), mapTag, 3)), numberTag = J$.X1(329, J$.W(321, 'numberTag', J$.T(233, '[object Number]', 21, false), numberTag, 3)), regexpTag = J$.X1(345, J$.W(337, 'regexpTag', J$.T(241, '[object RegExp]', 21, false), regexpTag, 3)), setTag = J$.X1(361, J$.W(353, 'setTag', J$.T(249, '[object Set]', 21, false), setTag, 3)), stringTag = J$.X1(377, J$.W(369, 'stringTag', J$.T(257, '[object String]', 21, false), stringTag, 3)), symbolTag = J$.X1(393, J$.W(385, 'symbolTag', J$.T(265, '[object Symbol]', 21, false), symbolTag, 3));
            var arrayBufferTag = J$.X1(497, J$.W(489, 'arrayBufferTag', J$.T(401, '[object ArrayBuffer]', 21, false), arrayBufferTag, 3)), dataViewTag = J$.X1(513, J$.W(505, 'dataViewTag', J$.T(409, '[object DataView]', 21, false), dataViewTag, 3)), float32Tag = J$.X1(529, J$.W(521, 'float32Tag', J$.T(417, '[object Float32Array]', 21, false), float32Tag, 3)), float64Tag = J$.X1(545, J$.W(537, 'float64Tag', J$.T(425, '[object Float64Array]', 21, false), float64Tag, 3)), int8Tag = J$.X1(561, J$.W(553, 'int8Tag', J$.T(433, '[object Int8Array]', 21, false), int8Tag, 3)), int16Tag = J$.X1(577, J$.W(569, 'int16Tag', J$.T(441, '[object Int16Array]', 21, false), int16Tag, 3)), int32Tag = J$.X1(593, J$.W(585, 'int32Tag', J$.T(449, '[object Int32Array]', 21, false), int32Tag, 3)), uint8Tag = J$.X1(609, J$.W(601, 'uint8Tag', J$.T(457, '[object Uint8Array]', 21, false), uint8Tag, 3)), uint8ClampedTag = J$.X1(625, J$.W(617, 'uint8ClampedTag', J$.T(465, '[object Uint8ClampedArray]', 21, false), uint8ClampedTag, 3)), uint16Tag = J$.X1(641, J$.W(633, 'uint16Tag', J$.T(473, '[object Uint16Array]', 21, false), uint16Tag, 3)), uint32Tag = J$.X1(657, J$.W(649, 'uint32Tag', J$.T(481, '[object Uint32Array]', 21, false), uint32Tag, 3));
            J$.X1(1289, J$.P(1281, J$.R(1265, 'module', module, 2), 'exports', J$.R(1273, 'initCloneByTag', initCloneByTag, 1), 0));
        } catch (J$e) {
            J$.Ex(1689, J$e);
        } finally {
            if (J$.Sr(1697)) {
                J$.L();
                continue jalangiLabel619;
            } else {
                J$.L();
                break jalangiLabel619;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
