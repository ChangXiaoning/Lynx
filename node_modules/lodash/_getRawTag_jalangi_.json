{"8":[17,22,17,29],"9":[1,15,1,22],"10":[40,7,40,35],"16":[37,9,37,14],"17":[1,23,1,34],"24":[36,7,36,15],"25":[1,15,1,35],"33":[1,15,1,35],"41":[1,15,1,35],"49":[4,19,4,25],"57":[4,19,4,35],"65":[4,19,4,35],"73":[4,19,4,35],"81":[7,22,7,33],"89":[7,22,7,48],"97":[7,22,7,48],"105":[7,22,7,48],"113":[14,28,14,39],"121":[14,28,14,48],"129":[14,28,14,48],"137":[14,28,14,48],"145":[17,22,17,29],"153":[17,32,17,39],"161":[17,32,17,51],"169":[17,54,17,63],"177":[17,22,17,63],"185":[17,22,17,63],"193":[27,15,27,29],"201":[27,35,27,40],"209":[27,42,27,56],"217":[27,15,27,57],"219":[27,15,27,34],"225":[28,9,28,14],"233":[28,15,28,29],"241":[28,9,28,30],"249":[27,15,27,57],"257":[27,15,27,57],"265":[28,9,28,30],"273":[28,9,28,30],"281":[31,5,31,10],"289":[31,11,31,25],"297":[31,29,31,38],"305":[31,5,31,38],"313":[31,5,31,39],"321":[32,20,32,24],"329":[32,20,32,24],"337":[32,20,32,24],"345":[33,5,33,17],"353":[35,16,35,36],"361":[35,42,35,47],"369":[35,16,35,48],"371":[35,16,35,41],"377":[35,16,35,48],"385":[35,16,35,48],"393":[36,7,36,15],"401":[37,9,37,14],"409":[38,7,38,12],"417":[38,13,38,27],"425":[38,31,38,34],"433":[38,7,38,34],"441":[38,7,38,35],"449":[40,14,40,19],"457":[40,20,40,34],"465":[40,7,40,36],"473":[43,10,43,16],"481":[43,10,43,16],"489":[43,3,43,17],"497":[26,1,44,2],"505":[26,1,44,2],"513":[26,1,44,2],"521":[26,1,44,2],"529":[26,1,44,2],"537":[26,1,44,2],"545":[26,1,44,2],"553":[46,1,46,7],"561":[46,18,46,27],"569":[46,1,46,27],"577":[46,1,46,28],"585":[1,1,46,28],"593":[1,1,46,28],"601":[1,1,46,28],"609":[1,1,46,28],"617":[1,1,46,28],"625":[1,1,46,28],"633":[26,1,44,2],"641":[1,1,46,28],"649":[17,22,17,63],"657":[37,5,41,6],"665":[36,3,42,4],"673":[26,1,44,2],"681":[26,1,44,2],"689":[1,1,46,28],"697":[1,1,46,28],"nBranches":6,"originalCodeFileName":"/home/james/nodejs/HiPar/node_modules/lodash/_getRawTag.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/node_modules/lodash/_getRawTag_jalangi_.js","code":"var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n"}