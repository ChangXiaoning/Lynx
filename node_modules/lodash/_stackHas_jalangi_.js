J$.iids = {"9":[11,10,11,14],"17":[11,10,11,23],"25":[11,28,11,31],"33":[11,10,11,32],"35":[11,10,11,27],"41":[11,10,11,32],"49":[11,3,11,33],"57":[10,1,12,2],"65":[10,1,12,2],"73":[10,1,12,2],"81":[14,1,14,7],"89":[14,18,14,26],"97":[14,1,14,26],"105":[14,1,14,27],"113":[1,1,14,27],"121":[10,1,12,2],"129":[1,1,14,27],"137":[10,1,12,2],"145":[10,1,12,2],"153":[1,1,14,27],"161":[1,1,14,27],"nBranches":0,"originalCodeFileName":"/home/james/nodejs/HiPar/node_modules/lodash/_stackHas.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/node_modules/lodash/_stackHas_jalangi_.js","code":"/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;\n"};
jalangiLabel477:
    while (true) {
        try {
            J$.Se(113, '/home/james/nodejs/HiPar/node_modules/lodash/_stackHas_jalangi_.js', '/home/james/nodejs/HiPar/node_modules/lodash/_stackHas.js');
            function stackHas(key) {
                jalangiLabel476:
                    while (true) {
                        try {
                            J$.Fe(57, arguments.callee, this, arguments);
                            arguments = J$.N(65, 'arguments', arguments, 4);
                            key = J$.N(73, 'key', key, 4);
                            return J$.X1(49, J$.Rt(41, J$.M(33, J$.G(17, J$.R(9, 'this', this, 0), '__data__', 0), 'has', 0)(J$.R(25, 'key', key, 0))));
                        } catch (J$e) {
                            J$.Ex(137, J$e);
                        } finally {
                            if (J$.Fr(145))
                                continue jalangiLabel476;
                            else
                                return J$.Ra();
                        }
                    }
            }
            stackHas = J$.N(129, 'stackHas', J$.T(121, stackHas, 12, false, 57), 0);
            J$.X1(105, J$.P(97, J$.R(81, 'module', module, 2), 'exports', J$.R(89, 'stackHas', stackHas, 1), 0));
        } catch (J$e) {
            J$.Ex(153, J$e);
        } finally {
            if (J$.Sr(161)) {
                J$.L();
                continue jalangiLabel477;
            } else {
                J$.L();
                break jalangiLabel477;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
