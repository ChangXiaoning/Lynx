J$.iids = {"8":[15,19,15,72],"9":[1,11,1,18],"10":[6,16,6,21],"16":[15,17,15,73],"17":[1,19,1,27],"18":[15,52,15,54],"25":[1,11,1,28],"26":[15,26,15,60],"33":[2,8,2,15],"34":[15,26,15,72],"41":[2,16,2,24],"42":[15,17,15,73],"49":[2,8,2,25],"57":[3,14,3,21],"65":[3,22,3,37],"73":[3,14,3,38],"81":[1,11,1,28],"89":[1,11,1,28],"97":[2,8,2,25],"105":[2,8,2,25],"113":[3,14,3,38],"121":[3,14,3,38],"129":[6,16,6,17],"137":[6,20,6,21],"145":[6,16,6,21],"153":[6,16,6,21],"161":[15,19,15,22],"169":[15,26,15,27],"177":[15,30,15,40],"185":[15,45,15,48],"193":[15,53,15,54],"201":[15,49,15,55],"209":[15,41,15,56],"217":[15,30,15,57],"225":[15,58,15,59],"233":[15,30,15,60],"241":[15,64,15,72],"249":[15,76,15,80],"257":[16,14,16,17],"265":[16,18,16,24],"273":[16,10,16,25],"281":[16,10,16,25],"289":[16,3,16,26],"297":[15,83,17,2],"305":[15,83,17,2],"313":[15,83,17,2],"321":[15,83,17,2],"329":[15,17,17,2],"337":[15,17,17,2],"345":[19,1,19,7],"353":[19,18,19,27],"361":[19,1,19,27],"369":[19,1,19,28],"377":[1,1,19,28],"385":[1,1,19,28],"393":[1,1,19,28],"401":[1,1,19,28],"409":[1,1,19,28],"417":[1,1,19,28],"425":[15,83,17,2],"433":[15,83,17,2],"441":[15,17,17,2],"449":[1,1,19,28],"457":[1,1,19,28],"nBranches":4,"originalCodeFileName":"/home/james/nodejs/HiPar/node_modules/lodash/_createSet.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/node_modules/lodash/_createSet_jalangi_.js","code":"var Set = require('./_Set'),\n    noop = require('./noop'),\n    setToArray = require('./_setToArray');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\nmodule.exports = createSet;\n"};
jalangiLabel668:
    while (true) {
        try {
            J$.Se(377, '/home/james/nodejs/HiPar/node_modules/lodash/_createSet_jalangi_.js', '/home/james/nodejs/HiPar/node_modules/lodash/_createSet.js');
            J$.N(385, 'Set', Set, 0);
            J$.N(393, 'noop', noop, 0);
            J$.N(401, 'setToArray', setToArray, 0);
            J$.N(409, 'INFINITY', INFINITY, 0);
            J$.N(417, 'createSet', createSet, 0);
            var Set = J$.X1(89, J$.W(81, 'Set', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, './_Set', 21, false)), Set, 3)), noop = J$.X1(105, J$.W(97, 'noop', J$.F(49, J$.R(33, 'require', require, 2), 0)(J$.T(41, './noop', 21, false)), noop, 3)), setToArray = J$.X1(121, J$.W(113, 'setToArray', J$.F(73, J$.R(57, 'require', require, 2), 0)(J$.T(65, './_setToArray', 21, false)), setToArray, 3));
            var INFINITY = J$.X1(153, J$.W(145, 'INFINITY', J$.B(10, '/', J$.T(129, 1, 22, false), J$.T(137, 0, 22, false), 0), INFINITY, 3));
            var createSet = J$.X1(337, J$.W(329, 'createSet', J$.X1(441, J$.C(16, J$.U(42, '!', J$.C(8, J$.R(161, 'Set', Set, 1)) ? J$.B(34, '==', J$.B(26, '/', J$.T(169, 1, 22, false), J$.G(233, J$.F(217, J$.R(177, 'setToArray', setToArray, 1), 0)(J$.F(209, J$.R(185, 'Set', Set, 1), 1)(J$.T(201, [
                ,
                J$.U(18, '-', J$.T(193, 0, 22, false))
            ], 10, false))), J$.T(225, 1, 22, false), 4), 0), J$.R(241, 'INFINITY', INFINITY, 1), 0) : J$._()))) ? J$.R(249, 'noop', noop, 1) : J$.T(321, function (values) {
                jalangiLabel667:
                    while (true) {
                        try {
                            J$.Fe(297, arguments.callee, this, arguments);
                            arguments = J$.N(305, 'arguments', arguments, 4);
                            values = J$.N(313, 'values', values, 4);
                            return J$.X1(289, J$.Rt(281, J$.F(273, J$.R(257, 'Set', Set, 1), 1)(J$.R(265, 'values', values, 0))));
                        } catch (J$e) {
                            J$.Ex(425, J$e);
                        } finally {
                            if (J$.Fr(433))
                                continue jalangiLabel667;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 297), createSet, 3));
            J$.X1(369, J$.P(361, J$.R(345, 'module', module, 2), 'exports', J$.R(353, 'createSet', createSet, 1), 0));
        } catch (J$e) {
            J$.Ex(449, J$e);
        } finally {
            if (J$.Sr(457)) {
                J$.L();
                continue jalangiLabel668;
            } else {
                J$.L();
                break jalangiLabel668;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
