{"8":[34,10,34,29],"9":[1,21,1,28],"17":[1,29,1,47],"25":[1,21,1,48],"33":[2,12,2,19],"41":[2,20,2,33],"49":[2,12,2,34],"57":[3,15,3,22],"65":[3,23,3,38],"73":[3,15,3,39],"81":[1,21,1,48],"89":[1,21,1,48],"97":[2,12,2,34],"105":[2,12,2,34],"113":[3,15,3,39],"121":[3,15,3,39],"129":[34,10,34,21],"137":[34,22,34,28],"145":[34,10,34,29],"153":[34,32,34,45],"161":[34,46,34,52],"169":[34,32,34,53],"177":[34,56,34,64],"185":[34,65,34,71],"193":[34,56,34,72],"201":[34,10,34,72],"209":[34,3,34,73],"217":[33,1,35,2],"225":[33,1,35,2],"233":[33,1,35,2],"241":[37,1,37,7],"249":[37,18,37,22],"257":[37,1,37,22],"265":[37,1,37,23],"273":[1,1,37,23],"281":[1,1,37,23],"289":[1,1,37,23],"297":[1,1,37,23],"305":[33,1,35,2],"313":[1,1,37,23],"321":[34,10,34,72],"329":[33,1,35,2],"337":[33,1,35,2],"345":[1,1,37,23],"353":[1,1,37,23],"nBranches":2,"originalCodeFileName":"/home/james/nodejs/HiPar/node_modules/lodash/keys.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/node_modules/lodash/keys_jalangi_.js","code":"var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;\n"}