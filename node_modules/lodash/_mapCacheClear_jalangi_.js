J$.iids = {"8":[16,17,16,33],"9":[1,12,1,19],"17":[1,20,1,29],"25":[1,12,1,30],"33":[2,13,2,20],"41":[2,21,2,35],"49":[2,13,2,36],"57":[3,7,3,14],"65":[3,15,3,23],"73":[3,7,3,24],"81":[1,12,1,30],"89":[1,12,1,30],"97":[2,13,2,36],"105":[2,13,2,36],"113":[3,7,3,24],"121":[3,7,3,24],"129":[13,3,13,7],"137":[13,15,13,16],"145":[13,3,13,16],"153":[13,3,13,17],"161":[14,3,14,7],"169":[15,17,15,21],"177":[15,13,15,23],"185":[16,17,16,20],"193":[16,24,16,33],"201":[16,12,16,36],"209":[17,19,17,23],"217":[17,15,17,25],"225":[14,19,17,27],"233":[14,3,17,27],"241":[14,3,17,28],"249":[12,1,19,2],"257":[12,1,19,2],"265":[21,1,21,7],"273":[21,18,21,31],"281":[21,1,21,31],"289":[21,1,21,32],"297":[1,1,21,32],"305":[1,1,21,32],"313":[1,1,21,32],"321":[1,1,21,32],"329":[12,1,19,2],"337":[1,1,21,32],"345":[12,1,19,2],"353":[12,1,19,2],"361":[1,1,21,32],"369":[1,1,21,32],"nBranches":2,"originalCodeFileName":"/home/james/nodejs/HiPar/node_modules/lodash/_mapCacheClear.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/node_modules/lodash/_mapCacheClear_jalangi_.js","code":"var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nmodule.exports = mapCacheClear;\n"};
jalangiLabel502:
    while (true) {
        try {
            J$.Se(297, '/home/james/nodejs/HiPar/node_modules/lodash/_mapCacheClear_jalangi_.js', '/home/james/nodejs/HiPar/node_modules/lodash/_mapCacheClear.js');
            function mapCacheClear() {
                jalangiLabel501:
                    while (true) {
                        try {
                            J$.Fe(249, arguments.callee, this, arguments);
                            arguments = J$.N(257, 'arguments', arguments, 4);
                            J$.X1(153, J$.P(145, J$.R(129, 'this', this, 0), 'size', J$.T(137, 0, 22, false), 0));
                            J$.X1(241, J$.P(233, J$.R(161, 'this', this, 0), '__data__', J$.T(225, {
                                'hash': J$.F(177, J$.R(169, 'Hash', Hash, 1), 1)(),
                                'map': J$.F(201, J$.C(8, J$.R(185, 'Map', Map, 1)) ? J$._() : J$.R(193, 'ListCache', ListCache, 1), 1)(),
                                'string': J$.F(217, J$.R(209, 'Hash', Hash, 1), 1)()
                            }, 11, false), 0));
                        } catch (J$e) {
                            J$.Ex(345, J$e);
                        } finally {
                            if (J$.Fr(353))
                                continue jalangiLabel501;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(305, 'Hash', Hash, 0);
            J$.N(313, 'ListCache', ListCache, 0);
            J$.N(321, 'Map', Map, 0);
            mapCacheClear = J$.N(337, 'mapCacheClear', J$.T(329, mapCacheClear, 12, false, 249), 0);
            var Hash = J$.X1(89, J$.W(81, 'Hash', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, './_Hash', 21, false)), Hash, 3)), ListCache = J$.X1(105, J$.W(97, 'ListCache', J$.F(49, J$.R(33, 'require', require, 2), 0)(J$.T(41, './_ListCache', 21, false)), ListCache, 3)), Map = J$.X1(121, J$.W(113, 'Map', J$.F(73, J$.R(57, 'require', require, 2), 0)(J$.T(65, './_Map', 21, false)), Map, 3));
            J$.X1(289, J$.P(281, J$.R(265, 'module', module, 2), 'exports', J$.R(273, 'mapCacheClear', mapCacheClear, 1), 0));
        } catch (J$e) {
            J$.Ex(361, J$e);
        } finally {
            if (J$.Sr(369)) {
                J$.L();
                continue jalangiLabel502;
            } else {
                J$.L();
                break jalangiLabel502;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
