J$.iids = {"8":[6,46,6,67],"9":[2,14,2,21],"16":[6,46,6,67],"17":[2,22,2,31],"25":[2,14,2,32],"33":[2,14,2,32],"41":[2,14,2,32],"49":[4,15,4,37],"57":[4,38,4,44],"65":[4,15,4,45],"73":[4,15,4,45],"81":[4,15,4,45],"89":[6,46,6,49],"97":[6,53,6,56],"105":[6,53,6,67],"113":[6,70,6,73],"121":[6,87,6,90],"129":[6,76,6,92],"137":[6,46,6,92],"145":[6,39,6,93],"153":[6,1,6,94],"161":[6,1,6,94],"169":[6,1,6,94],"177":[8,2,8,3],"185":[8,5,8,12],"193":[8,5,8,20],"201":[8,2,8,3],"209":[8,22,8,28],"217":[9,12,9,14],"225":[8,30,9,16],"233":[8,1,9,17],"241":[8,1,9,18],"249":[12,2,12,3],"257":[12,5,12,12],"265":[12,5,12,20],"273":[12,2,12,3],"281":[12,22,12,47],"289":[13,13,13,25],"297":[13,12,13,26],"305":[14,13,14,25],"313":[14,27,14,46],"321":[14,12,14,47],"329":[17,18,17,19],"337":[17,21,17,27],"345":[17,21,17,42],"353":[17,18,17,19],"361":[17,44,17,56],"369":[17,17,17,57],"377":[16,17,17,59],"385":[15,11,17,61],"393":[12,49,17,63],"401":[12,1,17,64],"409":[12,1,17,65],"417":[1,1,17,65],"425":[1,1,17,65],"433":[1,1,17,65],"441":[6,1,6,94],"449":[1,1,17,65],"457":[6,46,6,92],"465":[6,1,6,94],"473":[6,1,6,94],"481":[1,1,17,65],"489":[1,1,17,65],"nBranches":4,"originalCodeFileName":"/home/james/nodejs/HiPar/node_modules/babel-types/lib/definitions/misc.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/node_modules/babel-types/lib/definitions/misc_jalangi_.js","code":"\"use strict\";\n\nvar _index = require(\"./index\");\n\nvar _index2 = _interopRequireDefault(_index);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n(0, _index2.default)(\"Noop\", {\n  visitor: []\n});\n\n(0, _index2.default)(\"ParenthesizedExpression\", {\n  visitor: [\"expression\"],\n  aliases: [\"Expression\", \"ExpressionWrapper\"],\n  fields: {\n    expression: {\n      validate: (0, _index.assertNodeType)(\"Expression\")\n    }\n  }\n});"};
jalangiLabel707:
    while (true) {
        try {
            J$.Se(417, '/home/james/nodejs/HiPar/node_modules/babel-types/lib/definitions/misc_jalangi_.js', '/home/james/nodejs/HiPar/node_modules/babel-types/lib/definitions/misc.js');
            function _interopRequireDefault(obj) {
                jalangiLabel706:
                    while (true) {
                        try {
                            J$.Fe(153, arguments.callee, this, arguments);
                            arguments = J$.N(161, 'arguments', arguments, 4);
                            obj = J$.N(169, 'obj', obj, 4);
                            return J$.X1(145, J$.Rt(137, J$.X1(457, J$.C(16, J$.C(8, J$.R(89, 'obj', obj, 0)) ? J$.G(105, J$.R(97, 'obj', obj, 0), '__esModule', 0) : J$._())) ? J$.R(113, 'obj', obj, 0) : J$.T(129, {
                                default: J$.R(121, 'obj', obj, 0)
                            }, 11, false)));
                        } catch (J$e) {
                            J$.Ex(465, J$e);
                        } finally {
                            if (J$.Fr(473))
                                continue jalangiLabel706;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(425, '_index', _index, 0);
            J$.N(433, '_index2', _index2, 0);
            _interopRequireDefault = J$.N(449, '_interopRequireDefault', J$.T(441, _interopRequireDefault, 12, false, 153), 0);
            var _index = J$.X1(41, J$.W(33, '_index', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, "./index", 21, false)), _index, 3));
            var _index2 = J$.X1(81, J$.W(73, '_index2', J$.F(65, J$.R(49, '_interopRequireDefault', _interopRequireDefault, 1), 0)(J$.R(57, '_index', _index, 1)), _index2, 3));
            J$.X1(241, J$.F(233, (J$.X1(201, J$.T(177, 0, 22, false)), J$.G(193, J$.R(185, '_index2', _index2, 1), 'default', 0)), 0)(J$.T(209, "Noop", 21, false), J$.T(225, {
                visitor: J$.T(217, [], 10, false)
            }, 11, false)));
            J$.X1(409, J$.F(401, (J$.X1(273, J$.T(249, 0, 22, false)), J$.G(265, J$.R(257, '_index2', _index2, 1), 'default', 0)), 0)(J$.T(281, "ParenthesizedExpression", 21, false), J$.T(393, {
                visitor: J$.T(297, [J$.T(289, "expression", 21, false)], 10, false),
                aliases: J$.T(321, [
                    J$.T(305, "Expression", 21, false),
                    J$.T(313, "ExpressionWrapper", 21, false)
                ], 10, false),
                fields: J$.T(385, {
                    expression: J$.T(377, {
                        validate: J$.F(369, (J$.X1(353, J$.T(329, 0, 22, false)), J$.G(345, J$.R(337, '_index', _index, 1), 'assertNodeType', 0)), 0)(J$.T(361, "Expression", 21, false))
                    }, 11, false)
                }, 11, false)
            }, 11, false)));
        } catch (J$e) {
            J$.Ex(481, J$e);
        } finally {
            if (J$.Sr(489)) {
                J$.L();
                continue jalangiLabel707;
            } else {
                J$.L();
                break jalangiLabel707;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
