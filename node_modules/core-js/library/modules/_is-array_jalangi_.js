J$.iids = {"8":[3,18,5,2],"9":[2,11,2,18],"10":[4,10,4,29],"17":[2,19,2,27],"25":[2,11,2,28],"33":[2,11,2,28],"41":[2,11,2,28],"49":[3,1,3,7],"57":[3,18,3,23],"65":[3,18,3,31],"73":[4,10,4,13],"81":[4,14,4,17],"89":[4,10,4,18],"97":[4,22,4,29],"105":[4,10,4,29],"113":[4,3,4,30],"121":[3,35,5,2],"129":[3,35,5,2],"137":[3,35,5,2],"145":[3,35,5,2],"153":[3,35,5,2],"161":[3,1,5,2],"169":[3,1,5,3],"177":[1,1,5,3],"185":[1,1,5,3],"193":[3,35,5,2],"201":[3,35,5,2],"209":[1,1,5,3],"217":[1,1,5,3],"nBranches":2,"originalCodeFileName":"/home/james/nodejs/HiPar/node_modules/core-js/library/modules/_is-array.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/node_modules/core-js/library/modules/_is-array_jalangi_.js","code":"// 7.2.2 IsArray(argument)\nvar cof = require('./_cof');\nmodule.exports = Array.isArray || function isArray(arg) {\n  return cof(arg) == 'Array';\n};\n"};
jalangiLabel322:
    while (true) {
        try {
            J$.Se(177, '/home/james/nodejs/HiPar/node_modules/core-js/library/modules/_is-array_jalangi_.js', '/home/james/nodejs/HiPar/node_modules/core-js/library/modules/_is-array.js');
            J$.N(185, 'cof', cof, 0);
            var cof = J$.X1(41, J$.W(33, 'cof', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, './_cof', 21, false)), cof, 3));
            J$.X1(169, J$.P(161, J$.R(49, 'module', module, 2), 'exports', J$.C(8, J$.G(65, J$.R(57, 'Array', Array, 2), 'isArray', 0)) ? J$._() : J$.T(153, function isArray(arg) {
                jalangiLabel321:
                    while (true) {
                        try {
                            J$.Fe(121, arguments.callee, this, arguments);
                            arguments = J$.N(129, 'arguments', arguments, 4);
                            isArray = J$.N(137, 'isArray', isArray, 0);
                            arg = J$.N(145, 'arg', arg, 4);
                            return J$.X1(113, J$.Rt(105, J$.B(10, '==', J$.F(89, J$.R(73, 'cof', cof, 1), 0)(J$.R(81, 'arg', arg, 0)), J$.T(97, 'Array', 21, false), 0)));
                        } catch (J$e) {
                            J$.Ex(193, J$e);
                        } finally {
                            if (J$.Fr(201))
                                continue jalangiLabel321;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 121), 0));
        } catch (J$e) {
            J$.Ex(209, J$e);
        } finally {
            if (J$.Sr(217)) {
                J$.L();
                continue jalangiLabel322;
            } else {
                J$.L();
                break jalangiLabel322;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
