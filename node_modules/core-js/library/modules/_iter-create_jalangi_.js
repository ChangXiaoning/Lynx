J$.iids = {"9":[1,14,1,21],"10":[11,31,11,49],"17":[1,22,1,40],"25":[1,14,1,41],"33":[1,14,1,41],"41":[1,14,1,41],"49":[2,18,2,25],"57":[2,26,2,44],"65":[2,18,2,45],"73":[2,18,2,45],"81":[2,18,2,45],"89":[3,22,3,29],"97":[3,30,3,52],"105":[3,22,3,53],"113":[3,22,3,53],"121":[3,22,3,53],"129":[4,25,4,27],"137":[4,25,4,27],"145":[4,25,4,27],"153":[7,1,7,8],"161":[7,9,7,18],"169":[7,1,7,19],"177":[7,20,7,37],"185":[7,39,7,46],"193":[7,47,7,55],"201":[7,39,7,56],"209":[7,57,7,67],"217":[7,39,7,68],"225":[7,90,7,94],"233":[7,90,7,94],"241":[7,83,7,95],"249":[7,70,7,96],"257":[7,70,7,96],"265":[7,70,7,96],"273":[7,1,7,97],"281":[7,1,7,98],"289":[9,1,9,7],"297":[10,3,10,14],"305":[10,27,10,33],"313":[10,34,10,51],"321":[10,61,10,71],"329":[10,72,10,73],"337":[10,75,10,79],"345":[10,61,10,80],"353":[10,53,10,82],"361":[10,27,10,83],"369":[10,3,10,83],"377":[10,3,10,84],"385":[11,3,11,17],"393":[11,18,11,29],"401":[11,31,11,35],"409":[11,38,11,49],"417":[11,3,11,50],"425":[11,3,11,51],"433":[9,18,12,2],"441":[9,18,12,2],"449":[9,18,12,2],"457":[9,18,12,2],"465":[9,18,12,2],"473":[9,18,12,2],"481":[9,1,12,2],"489":[9,1,12,3],"497":[1,1,12,3],"505":[1,1,12,3],"513":[1,1,12,3],"521":[1,1,12,3],"529":[1,1,12,3],"537":[7,70,7,96],"545":[7,70,7,96],"553":[9,18,12,2],"561":[9,18,12,2],"569":[1,1,12,3],"577":[1,1,12,3],"nBranches":0,"originalCodeFileName":"/home/james/nodejs/HiPar/node_modules/core-js/library/modules/_iter-create.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/node_modules/core-js/library/modules/_iter-create_jalangi_.js","code":"'use strict';\nvar create = require('./_object-create');\nvar descriptor = require('./_property-desc');\nvar setToStringTag = require('./_set-to-string-tag');\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function () { return this; });\n\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n"};
jalangiLabel87:
    while (true) {
        try {
            J$.Se(497, '/home/james/nodejs/HiPar/node_modules/core-js/library/modules/_iter-create_jalangi_.js', '/home/james/nodejs/HiPar/node_modules/core-js/library/modules/_iter-create.js');
            J$.N(505, 'create', create, 0);
            J$.N(513, 'descriptor', descriptor, 0);
            J$.N(521, 'setToStringTag', setToStringTag, 0);
            J$.N(529, 'IteratorPrototype', IteratorPrototype, 0);
            var create = J$.X1(41, J$.W(33, 'create', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, './_object-create', 21, false)), create, 3));
            var descriptor = J$.X1(81, J$.W(73, 'descriptor', J$.F(65, J$.R(49, 'require', require, 2), 0)(J$.T(57, './_property-desc', 21, false)), descriptor, 3));
            var setToStringTag = J$.X1(121, J$.W(113, 'setToStringTag', J$.F(105, J$.R(89, 'require', require, 2), 0)(J$.T(97, './_set-to-string-tag', 21, false)), setToStringTag, 3));
            var IteratorPrototype = J$.X1(145, J$.W(137, 'IteratorPrototype', J$.T(129, {}, 11, false), IteratorPrototype, 3));
            J$.X1(281, J$.F(273, J$.F(169, J$.R(153, 'require', require, 2), 0)(J$.T(161, './_hide', 21, false)), 0)(J$.R(177, 'IteratorPrototype', IteratorPrototype, 1), J$.F(217, J$.F(201, J$.R(185, 'require', require, 2), 0)(J$.T(193, './_wks', 21, false)), 0)(J$.T(209, 'iterator', 21, false)), J$.T(265, function () {
                jalangiLabel85:
                    while (true) {
                        try {
                            J$.Fe(249, arguments.callee, this, arguments);
                            arguments = J$.N(257, 'arguments', arguments, 4);
                            return J$.X1(241, J$.Rt(233, J$.R(225, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(537, J$e);
                        } finally {
                            if (J$.Fr(545))
                                continue jalangiLabel85;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 249)));
            J$.X1(489, J$.P(481, J$.R(289, 'module', module, 2), 'exports', J$.T(473, function (Constructor, NAME, next) {
                jalangiLabel86:
                    while (true) {
                        try {
                            J$.Fe(433, arguments.callee, this, arguments);
                            arguments = J$.N(441, 'arguments', arguments, 4);
                            Constructor = J$.N(449, 'Constructor', Constructor, 4);
                            NAME = J$.N(457, 'NAME', NAME, 4);
                            next = J$.N(465, 'next', next, 4);
                            J$.X1(377, J$.P(369, J$.R(297, 'Constructor', Constructor, 0), 'prototype', J$.F(361, J$.R(305, 'create', create, 1), 0)(J$.R(313, 'IteratorPrototype', IteratorPrototype, 1), J$.T(353, {
                                next: J$.F(345, J$.R(321, 'descriptor', descriptor, 1), 0)(J$.T(329, 1, 22, false), J$.R(337, 'next', next, 0))
                            }, 11, false)), 0));
                            J$.X1(425, J$.F(417, J$.R(385, 'setToStringTag', setToStringTag, 1), 0)(J$.R(393, 'Constructor', Constructor, 0), J$.B(10, '+', J$.R(401, 'NAME', NAME, 0), J$.T(409, ' Iterator', 21, false), 0)));
                        } catch (J$e) {
                            J$.Ex(553, J$e);
                        } finally {
                            if (J$.Fr(561))
                                continue jalangiLabel86;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 433), 0));
        } catch (J$e) {
            J$.Ex(569, J$e);
        } finally {
            if (J$.Sr(577)) {
                J$.L();
                continue jalangiLabel87;
            } else {
                J$.L();
                break jalangiLabel87;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
