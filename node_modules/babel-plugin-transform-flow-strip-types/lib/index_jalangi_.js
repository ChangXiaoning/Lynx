J$.iids = {"8":[20,97,20,105],"9":[2,1,2,8],"10":[24,17,24,39],"16":[24,17,24,39],"17":[2,22,2,26],"18":[25,31,25,35],"24":[28,17,28,24],"25":[2,1,2,26],"32":[23,15,23,23],"33":[2,1,2,27],"34":[25,31,25,35],"40":[37,17,37,57],"41":[4,21,4,28],"42":[34,15,34,57],"48":[34,15,34,57],"49":[4,29,4,65],"50":[37,17,37,57],"56":[47,13,47,29],"57":[4,21,4,66],"58":[47,13,47,29],"64":[55,17,55,34],"65":[4,21,4,66],"66":[55,17,55,34],"72":[53,15,53,38],"73":[4,21,4,66],"74":[67,25,67,47],"80":[67,25,67,47],"81":[6,21,6,43],"82":[67,49,67,52],"88":[77,18,77,46],"89":[6,44,6,57],"96":[84,46,84,67],"97":[6,21,6,58],"98":[67,49,67,52],"104":[84,46,84,67],"105":[6,21,6,58],"113":[6,21,6,58],"121":[8,1,8,8],"129":[9,11,9,15],"137":[9,11,9,21],"145":[9,11,9,21],"153":[9,11,9,21],"161":[11,24,11,31],"169":[11,24,11,31],"177":[11,24,11,31],"185":[14,15,14,22],"193":[14,23,14,49],"201":[14,15,14,50],"209":[18,24,18,29],"217":[18,24,18,34],"225":[18,24,18,38],"233":[18,24,18,47],"241":[18,24,18,47],"249":[18,24,18,47],"257":[20,30,20,38],"265":[20,51,20,56],"273":[20,65,20,74],"281":[20,51,20,75],"283":[20,51,20,64],"289":[20,82,20,83],"297":[20,97,20,105],"305":[20,108,20,117],"313":[20,121,20,122],"321":[20,124,20,137],"329":[20,124,20,145],"337":[20,121,20,122],"345":[20,147,20,156],"353":[20,120,20,157],"361":[20,30,20,38],"369":[20,30,20,38],"377":[20,51,20,75],"385":[20,51,20,75],"393":[20,82,20,83],"401":[20,82,20,83],"409":[20,97,20,157],"417":[20,97,20,157],"425":[23,15,23,23],"433":[24,17,24,19],"441":[24,23,24,32],"449":[24,23,24,39],"457":[25,21,25,30],"473":[25,31,25,33],"481":[25,31,25,35],"497":[25,21,25,36],"505":[25,21,25,36],"513":[25,13,25,37],"521":[27,18,27,27],"529":[27,18,27,34],"531":[27,18,27,32],"537":[27,18,27,34],"545":[27,13,27,35],"553":[28,17,28,19],"561":[28,17,28,24],"569":[29,21,29,23],"577":[29,21,29,29],"585":[29,21,29,29],"593":[29,13,29,30],"601":[32,25,32,30],"609":[32,25,32,30],"617":[32,25,32,30],"625":[34,15,34,22],"633":[34,15,34,28],"641":[34,37,34,51],"649":[34,15,34,52],"651":[34,15,34,36],"657":[34,56,34,57],"665":[35,13,35,20],"673":[35,29,35,36],"681":[35,29,35,42],"689":[35,51,35,65],"697":[35,67,35,69],"705":[35,29,35,70],"707":[35,29,35,50],"713":[35,13,35,70],"721":[35,13,35,71],"729":[37,18,37,25],"737":[37,18,37,31],"745":[37,40,37,45],"753":[37,47,37,49],"761":[37,18,37,50],"763":[37,18,37,39],"769":[37,18,37,57],"771":[37,18,37,55],"777":[37,59,37,66],"785":[37,76,37,80],"793":[37,59,37,80],"801":[37,59,37,81],"809":[17,16,40,8],"817":[17,16,40,8],"825":[17,16,40,8],"833":[17,16,40,8],"841":[17,16,40,8],"849":[17,16,40,8],"857":[17,16,40,8],"865":[17,16,40,8],"873":[17,16,40,8],"881":[17,16,40,8],"889":[17,16,40,8],"897":[17,16,40,8],"905":[42,9,42,13],"913":[42,9,42,22],"915":[42,9,42,20],"921":[42,9,42,23],"929":[41,13,43,8],"937":[41,13,43,8],"945":[41,13,43,8],"953":[41,13,43,8],"961":[41,13,43,8],"969":[45,9,45,13],"977":[45,9,45,18],"985":[45,30,45,34],"993":[45,9,45,34],"1001":[45,9,45,35],"1009":[46,9,46,13],"1017":[46,9,46,18],"1025":[46,36,46,40],"1033":[46,9,46,40],"1041":[46,9,46,41],"1049":[47,14,47,18],"1057":[47,14,47,23],"1065":[47,14,47,29],"1073":[47,31,47,35],"1081":[47,31,47,44],"1083":[47,31,47,42],"1089":[47,31,47,45],"1097":[44,22,48,8],"1105":[44,22,48,8],"1113":[44,22,48,8],"1121":[44,22,48,8],"1129":[44,22,48,8],"1137":[50,9,50,13],"1145":[50,9,50,18],"1153":[50,32,50,36],"1161":[50,9,50,36],"1169":[50,9,50,37],"1177":[52,9,52,13],"1185":[52,18,52,29],"1193":[52,9,52,30],"1195":[52,9,52,17],"1201":[53,15,53,20],"1209":[53,15,53,38],"1211":[53,15,53,36],"1217":[54,13,54,18],"1225":[54,13,54,23],"1233":[54,41,54,45],"1241":[54,13,54,45],"1249":[54,13,54,46],"1257":[55,18,55,23],"1265":[55,18,55,28],"1273":[55,18,55,34],"1281":[55,36,55,41],"1289":[55,36,55,50],"1291":[55,36,55,48],"1297":[55,36,55,51],"1305":[52,39,57,10],"1313":[52,39,57,10],"1321":[52,39,57,10],"1329":[52,39,57,10],"1337":[52,9,57,11],"1339":[52,9,52,38],"1345":[52,9,57,12],"1353":[49,14,58,8],"1361":[49,14,58,8],"1369":[49,14,58,8],"1377":[49,14,58,8],"1385":[49,14,58,8],"1393":[60,20,60,25],"1401":[60,20,60,30],"1409":[60,20,60,30],"1417":[60,20,60,30],"1425":[62,9,62,13],"1433":[62,9,62,18],"1441":[62,30,62,35],"1449":[62,9,62,35],"1457":[62,9,62,36],"1465":[59,26,63,8],"1473":[59,26,63,8],"1481":[59,26,63,8],"1489":[59,26,63,8],"1497":[59,26,63,8],"1505":[59,26,63,8],"1513":[65,20,65,25],"1521":[65,20,65,30],"1529":[65,20,65,30],"1537":[65,20,65,30],"1545":[67,22,67,23],"1553":[67,22,67,23],"1561":[67,22,67,23],"1569":[67,25,67,26],"1577":[67,29,67,33],"1585":[67,29,67,40],"1593":[67,29,67,47],"1609":[67,49,67,50],"1617":[67,49,67,52],"1633":[68,23,68,27],"1641":[68,23,68,34],"1649":[68,35,68,36],"1657":[68,23,68,37],"1665":[68,23,68,37],"1673":[68,23,68,37],"1681":[69,11,69,16],"1689":[69,28,69,33],"1697":[69,11,69,33],"1705":[69,11,69,34],"1713":[64,17,71,8],"1721":[64,17,71,8],"1729":[64,17,71,8],"1737":[64,17,71,8],"1745":[64,17,71,8],"1753":[64,17,71,8],"1761":[64,17,71,8],"1769":[64,17,71,8],"1777":[73,20,73,24],"1785":[73,20,73,29],"1793":[73,20,73,29],"1801":[73,20,73,29],"1809":[76,18,76,22],"1817":[76,18,76,33],"1825":[76,18,76,33],"1833":[76,11,76,34],"1841":[77,18,77,19],"1849":[77,41,77,45],"1857":[77,18,77,46],"1859":[77,18,77,40],"1865":[78,9,78,13],"1873":[78,26,78,30],"1881":[78,9,78,31],"1883":[78,9,78,25],"1889":[78,9,78,32],"1897":[72,27,79,8],"1905":[72,27,79,8],"1913":[72,27,79,8],"1921":[72,27,79,8],"1929":[72,27,79,8],"1937":[72,27,79,8],"1945":[16,14,79,10],"1953":[13,10,79,12],"1961":[13,10,79,12],"1969":[13,3,79,13],"1977":[8,19,82,2],"1985":[8,19,82,2],"1993":[8,19,82,2],"2001":[8,19,82,2],"2009":[8,19,82,2],"2017":[8,19,82,2],"2025":[8,1,82,2],"2033":[8,1,82,3],"2041":[84,46,84,49],"2049":[84,53,84,56],"2057":[84,53,84,67],"2065":[84,70,84,73],"2073":[84,87,84,90],"2081":[84,76,84,92],"2089":[84,46,84,92],"2097":[84,39,84,93],"2105":[84,1,84,94],"2113":[84,1,84,94],"2121":[84,1,84,94],"2129":[86,1,86,7],"2137":[86,18,86,25],"2145":[86,26,86,35],"2153":[86,18,86,36],"2161":[86,1,86,36],"2169":[86,1,86,37],"2177":[1,1,86,37],"2185":[1,1,86,37],"2193":[1,1,86,37],"2201":[84,1,84,94],"2209":[1,1,86,37],"2217":[20,97,20,157],"2225":[24,13,24,47],"2233":[28,13,28,32],"2241":[23,11,30,12],"2249":[37,13,37,81],"2257":[34,11,38,12],"2265":[17,16,40,8],"2273":[17,16,40,8],"2281":[41,13,43,8],"2289":[41,13,43,8],"2297":[47,9,47,45],"2305":[44,22,48,8],"2313":[44,22,48,8],"2321":[55,13,55,51],"2329":[53,11,56,12],"2337":[52,39,57,10],"2345":[52,39,57,10],"2353":[49,14,58,8],"2361":[49,14,58,8],"2369":[59,26,63,8],"2377":[59,26,63,8],"2385":[67,9,70,10],"2393":[67,9,70,10],"2401":[64,17,71,8],"2409":[64,17,71,8],"2417":[75,9,77,48],"2425":[72,27,79,8],"2433":[72,27,79,8],"2441":[8,19,82,2],"2449":[8,19,82,2],"2457":[84,46,84,92],"2465":[84,1,84,94],"2473":[84,1,84,94],"2481":[1,1,86,37],"2489":[1,1,86,37],"nBranches":26,"originalCodeFileName":"/home/james/nodejs/HiPar/node_modules/babel-plugin-transform-flow-strip-types/lib/index.js","instrumentedCodeFileName":"/home/james/nodejs/HiPar/node_modules/babel-plugin-transform-flow-strip-types/lib/index_jalangi_.js","code":"\"use strict\";\n\nexports.__esModule = true;\n\nvar _getIterator2 = require(\"babel-runtime/core-js/get-iterator\");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nexports.default = function (_ref) {\n  var t = _ref.types;\n\n  var FLOW_DIRECTIVE = \"@flow\";\n\n  return {\n    inherits: require(\"babel-plugin-syntax-flow\"),\n\n    visitor: {\n      Program: function Program(path, _ref2) {\n        var comments = _ref2.file.ast.comments;\n\n        for (var _iterator = comments, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n          var _ref3;\n\n          if (_isArray) {\n            if (_i >= _iterator.length) break;\n            _ref3 = _iterator[_i++];\n          } else {\n            _i = _iterator.next();\n            if (_i.done) break;\n            _ref3 = _i.value;\n          }\n\n          var comment = _ref3;\n\n          if (comment.value.indexOf(FLOW_DIRECTIVE) >= 0) {\n            comment.value = comment.value.replace(FLOW_DIRECTIVE, \"\");\n\n            if (!comment.value.replace(/\\*/g, \"\").trim()) comment.ignore = true;\n          }\n        }\n      },\n      Flow: function Flow(path) {\n        path.remove();\n      },\n      ClassProperty: function ClassProperty(path) {\n        path.node.variance = null;\n        path.node.typeAnnotation = null;\n        if (!path.node.value) path.remove();\n      },\n      Class: function Class(path) {\n        path.node.implements = null;\n\n        path.get(\"body.body\").forEach(function (child) {\n          if (child.isClassProperty()) {\n            child.node.typeAnnotation = null;\n            if (!child.node.value) child.remove();\n          }\n        });\n      },\n      AssignmentPattern: function AssignmentPattern(_ref4) {\n        var node = _ref4.node;\n\n        node.left.optional = false;\n      },\n      Function: function Function(_ref5) {\n        var node = _ref5.node;\n\n        for (var i = 0; i < node.params.length; i++) {\n          var param = node.params[i];\n          param.optional = false;\n        }\n      },\n      TypeCastExpression: function TypeCastExpression(path) {\n        var node = path.node;\n\n        do {\n          node = node.expression;\n        } while (t.isTypeCastExpression(node));\n        path.replaceWith(node);\n      }\n    }\n  };\n};\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = exports[\"default\"];"};
jalangiLabel14:
    while (true) {
        try {
            J$.Se(2177, '/home/james/nodejs/HiPar/node_modules/babel-plugin-transform-flow-strip-types/lib/index_jalangi_.js', '/home/james/nodejs/HiPar/node_modules/babel-plugin-transform-flow-strip-types/lib/index.js');
            function _interopRequireDefault(obj) {
                jalangiLabel13:
                    while (true) {
                        try {
                            J$.Fe(2105, arguments.callee, this, arguments);
                            arguments = J$.N(2113, 'arguments', arguments, 4);
                            obj = J$.N(2121, 'obj', obj, 4);
                            return J$.X1(2097, J$.Rt(2089, J$.X1(2457, J$.C(104, J$.C(96, J$.R(2041, 'obj', obj, 0)) ? J$.G(2057, J$.R(2049, 'obj', obj, 0), '__esModule', 0) : J$._())) ? J$.R(2065, 'obj', obj, 0) : J$.T(2081, {
                                default: J$.R(2073, 'obj', obj, 0)
                            }, 11, false)));
                        } catch (J$e) {
                            J$.Ex(2465, J$e);
                        } finally {
                            if (J$.Fr(2473))
                                continue jalangiLabel13;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2185, '_getIterator2', _getIterator2, 0);
            J$.N(2193, '_getIterator3', _getIterator3, 0);
            _interopRequireDefault = J$.N(2209, '_interopRequireDefault', J$.T(2201, _interopRequireDefault, 12, false, 2105), 0);
            J$.X1(33, J$.P(25, J$.R(9, 'exports', exports, 2), '__esModule', J$.T(17, true, 23, false), 0));
            var _getIterator2 = J$.X1(73, J$.W(65, '_getIterator2', J$.F(57, J$.R(41, 'require', require, 2), 0)(J$.T(49, "babel-runtime/core-js/get-iterator", 21, false)), _getIterator2, 3));
            var _getIterator3 = J$.X1(113, J$.W(105, '_getIterator3', J$.F(97, J$.R(81, '_interopRequireDefault', _interopRequireDefault, 1), 0)(J$.R(89, '_getIterator2', _getIterator2, 1)), _getIterator3, 3));
            J$.X1(2033, J$.P(2025, J$.R(121, 'exports', exports, 2), 'default', J$.T(2017, function (_ref) {
                jalangiLabel12:
                    while (true) {
                        try {
                            J$.Fe(1977, arguments.callee, this, arguments);
                            arguments = J$.N(1985, 'arguments', arguments, 4);
                            _ref = J$.N(1993, '_ref', _ref, 4);
                            J$.N(2001, 't', t, 0);
                            J$.N(2009, 'FLOW_DIRECTIVE', FLOW_DIRECTIVE, 0);
                            var t = J$.X1(153, J$.W(145, 't', J$.G(137, J$.R(129, '_ref', _ref, 0), 'types', 0), t, 1));
                            var FLOW_DIRECTIVE = J$.X1(177, J$.W(169, 'FLOW_DIRECTIVE', J$.T(161, "@flow", 21, false), FLOW_DIRECTIVE, 1));
                            return J$.X1(1969, J$.Rt(1961, J$.T(1953, {
                                inherits: J$.F(201, J$.R(185, 'require', require, 2), 0)(J$.T(193, "babel-plugin-syntax-flow", 21, false)),
                                visitor: J$.T(1945, {
                                    Program: J$.T(897, function Program(path, _ref2) {
                                        jalangiLabel4:
                                            while (true) {
                                                try {
                                                    J$.Fe(809, arguments.callee, this, arguments);
                                                    arguments = J$.N(817, 'arguments', arguments, 4);
                                                    Program = J$.N(825, 'Program', Program, 0);
                                                    path = J$.N(833, 'path', path, 4);
                                                    _ref2 = J$.N(841, '_ref2', _ref2, 4);
                                                    J$.N(849, 'comments', comments, 0);
                                                    J$.N(857, '_iterator', _iterator, 0);
                                                    J$.N(865, '_isArray', _isArray, 0);
                                                    J$.N(873, '_i', _i, 0);
                                                    J$.N(881, '_ref3', _ref3, 0);
                                                    J$.N(889, 'comment', comment, 0);
                                                    var comments = J$.X1(249, J$.W(241, 'comments', J$.G(233, J$.G(225, J$.G(217, J$.R(209, '_ref2', _ref2, 0), 'file', 0), 'ast', 0), 'comments', 0), comments, 1));
                                                    for (var _iterator = J$.X1(369, J$.W(361, '_iterator', J$.R(257, 'comments', comments, 0), _iterator, 1)), _isArray = J$.X1(385, J$.W(377, '_isArray', J$.M(281, J$.R(265, 'Array', Array, 2), 'isArray', 0)(J$.R(273, '_iterator', _iterator, 0)), _isArray, 1)), _i = J$.X1(401, J$.W(393, '_i', J$.T(289, 0, 22, false), _i, 1)), _iterator = J$.X1(417, J$.W(409, '_iterator', J$.X1(2217, J$.C(8, J$.R(297, '_isArray', _isArray, 0))) ? J$.R(305, '_iterator', _iterator, 0) : J$.F(353, (J$.X1(337, J$.T(313, 0, 22, false)), J$.G(329, J$.R(321, '_getIterator3', _getIterator3, 1), 'default', 0)), 0)(J$.R(345, '_iterator', _iterator, 0)), _iterator, 1));;) {
                                                        var _ref3;
                                                        if (J$.X1(2241, J$.C(32, J$.R(425, '_isArray', _isArray, 0)))) {
                                                            if (J$.X1(2225, J$.C(16, J$.B(10, '>=', J$.R(433, '_i', _i, 0), J$.G(449, J$.R(441, '_iterator', _iterator, 0), 'length', 0), 0))))
                                                                break;
                                                            J$.X1(513, _ref3 = J$.W(505, '_ref3', J$.G(497, J$.R(457, '_iterator', _iterator, 0), J$.B(34, '-', _i = J$.W(481, '_i', J$.B(26, '+', J$.U(18, '+', J$.R(473, '_i', _i, 0)), J$.T(465, 1, 22, false), 0), _i, 0), J$.T(489, 1, 22, false), 0), 4), _ref3, 0));
                                                        } else {
                                                            J$.X1(545, _i = J$.W(537, '_i', J$.M(529, J$.R(521, '_iterator', _iterator, 0), 'next', 0)(), _i, 0));
                                                            if (J$.X1(2233, J$.C(24, J$.G(561, J$.R(553, '_i', _i, 0), 'done', 0))))
                                                                break;
                                                            J$.X1(593, _ref3 = J$.W(585, '_ref3', J$.G(577, J$.R(569, '_i', _i, 0), 'value', 0), _ref3, 0));
                                                        }
                                                        var comment = J$.X1(617, J$.W(609, 'comment', J$.R(601, '_ref3', _ref3, 0), comment, 1));
                                                        if (J$.X1(2257, J$.C(48, J$.B(42, '>=', J$.M(649, J$.G(633, J$.R(625, 'comment', comment, 0), 'value', 0), 'indexOf', 0)(J$.R(641, 'FLOW_DIRECTIVE', FLOW_DIRECTIVE, 0)), J$.T(657, 0, 22, false), 0)))) {
                                                            J$.X1(721, J$.P(713, J$.R(665, 'comment', comment, 0), 'value', J$.M(705, J$.G(681, J$.R(673, 'comment', comment, 0), 'value', 0), 'replace', 0)(J$.R(689, 'FLOW_DIRECTIVE', FLOW_DIRECTIVE, 0), J$.T(697, "", 21, false)), 0));
                                                            if (J$.X1(2249, J$.C(40, J$.U(50, '!', J$.M(769, J$.M(761, J$.G(737, J$.R(729, 'comment', comment, 0), 'value', 0), 'replace', 0)(J$.T(745, /\*/g, 14, false), J$.T(753, "", 21, false)), 'trim', 0)()))))
                                                                J$.X1(801, J$.P(793, J$.R(777, 'comment', comment, 0), 'ignore', J$.T(785, true, 23, false), 0));
                                                        }
                                                    }
                                                } catch (J$e) {
                                                    J$.Ex(2265, J$e);
                                                } finally {
                                                    if (J$.Fr(2273))
                                                        continue jalangiLabel4;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false, 809),
                                    Flow: J$.T(961, function Flow(path) {
                                        jalangiLabel5:
                                            while (true) {
                                                try {
                                                    J$.Fe(929, arguments.callee, this, arguments);
                                                    arguments = J$.N(937, 'arguments', arguments, 4);
                                                    Flow = J$.N(945, 'Flow', Flow, 0);
                                                    path = J$.N(953, 'path', path, 4);
                                                    J$.X1(921, J$.M(913, J$.R(905, 'path', path, 0), 'remove', 0)());
                                                } catch (J$e) {
                                                    J$.Ex(2281, J$e);
                                                } finally {
                                                    if (J$.Fr(2289))
                                                        continue jalangiLabel5;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false, 929),
                                    ClassProperty: J$.T(1129, function ClassProperty(path) {
                                        jalangiLabel6:
                                            while (true) {
                                                try {
                                                    J$.Fe(1097, arguments.callee, this, arguments);
                                                    arguments = J$.N(1105, 'arguments', arguments, 4);
                                                    ClassProperty = J$.N(1113, 'ClassProperty', ClassProperty, 0);
                                                    path = J$.N(1121, 'path', path, 4);
                                                    J$.X1(1001, J$.P(993, J$.G(977, J$.R(969, 'path', path, 0), 'node', 0), 'variance', J$.T(985, null, 25, false), 0));
                                                    J$.X1(1041, J$.P(1033, J$.G(1017, J$.R(1009, 'path', path, 0), 'node', 0), 'typeAnnotation', J$.T(1025, null, 25, false), 0));
                                                    if (J$.X1(2297, J$.C(56, J$.U(58, '!', J$.G(1065, J$.G(1057, J$.R(1049, 'path', path, 0), 'node', 0), 'value', 0)))))
                                                        J$.X1(1089, J$.M(1081, J$.R(1073, 'path', path, 0), 'remove', 0)());
                                                } catch (J$e) {
                                                    J$.Ex(2305, J$e);
                                                } finally {
                                                    if (J$.Fr(2313))
                                                        continue jalangiLabel6;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false, 1097),
                                    Class: J$.T(1385, function Class(path) {
                                        jalangiLabel8:
                                            while (true) {
                                                try {
                                                    J$.Fe(1353, arguments.callee, this, arguments);
                                                    arguments = J$.N(1361, 'arguments', arguments, 4);
                                                    Class = J$.N(1369, 'Class', Class, 0);
                                                    path = J$.N(1377, 'path', path, 4);
                                                    J$.X1(1169, J$.P(1161, J$.G(1145, J$.R(1137, 'path', path, 0), 'node', 0), 'implements', J$.T(1153, null, 25, false), 0));
                                                    J$.X1(1345, J$.M(1337, J$.M(1193, J$.R(1177, 'path', path, 0), 'get', 0)(J$.T(1185, "body.body", 21, false)), 'forEach', 0)(J$.T(1329, function (child) {
                                                        jalangiLabel7:
                                                            while (true) {
                                                                try {
                                                                    J$.Fe(1305, arguments.callee, this, arguments);
                                                                    arguments = J$.N(1313, 'arguments', arguments, 4);
                                                                    child = J$.N(1321, 'child', child, 4);
                                                                    if (J$.X1(2329, J$.C(72, J$.M(1209, J$.R(1201, 'child', child, 0), 'isClassProperty', 0)()))) {
                                                                        J$.X1(1249, J$.P(1241, J$.G(1225, J$.R(1217, 'child', child, 0), 'node', 0), 'typeAnnotation', J$.T(1233, null, 25, false), 0));
                                                                        if (J$.X1(2321, J$.C(64, J$.U(66, '!', J$.G(1273, J$.G(1265, J$.R(1257, 'child', child, 0), 'node', 0), 'value', 0)))))
                                                                            J$.X1(1297, J$.M(1289, J$.R(1281, 'child', child, 0), 'remove', 0)());
                                                                    }
                                                                } catch (J$e) {
                                                                    J$.Ex(2337, J$e);
                                                                } finally {
                                                                    if (J$.Fr(2345))
                                                                        continue jalangiLabel7;
                                                                    else
                                                                        return J$.Ra();
                                                                }
                                                            }
                                                    }, 12, false, 1305)));
                                                } catch (J$e) {
                                                    J$.Ex(2353, J$e);
                                                } finally {
                                                    if (J$.Fr(2361))
                                                        continue jalangiLabel8;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false, 1353),
                                    AssignmentPattern: J$.T(1505, function AssignmentPattern(_ref4) {
                                        jalangiLabel9:
                                            while (true) {
                                                try {
                                                    J$.Fe(1465, arguments.callee, this, arguments);
                                                    arguments = J$.N(1473, 'arguments', arguments, 4);
                                                    AssignmentPattern = J$.N(1481, 'AssignmentPattern', AssignmentPattern, 0);
                                                    _ref4 = J$.N(1489, '_ref4', _ref4, 4);
                                                    J$.N(1497, 'node', node, 0);
                                                    var node = J$.X1(1417, J$.W(1409, 'node', J$.G(1401, J$.R(1393, '_ref4', _ref4, 0), 'node', 0), node, 1));
                                                    J$.X1(1457, J$.P(1449, J$.G(1433, J$.R(1425, 'node', node, 0), 'left', 0), 'optional', J$.T(1441, false, 23, false), 0));
                                                } catch (J$e) {
                                                    J$.Ex(2369, J$e);
                                                } finally {
                                                    if (J$.Fr(2377))
                                                        continue jalangiLabel9;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false, 1465),
                                    Function: J$.T(1769, function Function(_ref5) {
                                        jalangiLabel10:
                                            while (true) {
                                                try {
                                                    J$.Fe(1713, arguments.callee, this, arguments);
                                                    arguments = J$.N(1721, 'arguments', arguments, 4);
                                                    Function = J$.N(1729, 'Function', Function, 0);
                                                    _ref5 = J$.N(1737, '_ref5', _ref5, 4);
                                                    J$.N(1745, 'node', node, 0);
                                                    J$.N(1753, 'i', i, 0);
                                                    J$.N(1761, 'param', param, 0);
                                                    var node = J$.X1(1537, J$.W(1529, 'node', J$.G(1521, J$.R(1513, '_ref5', _ref5, 0), 'node', 0), node, 1));
                                                    for (var i = J$.X1(1561, J$.W(1553, 'i', J$.T(1545, 0, 22, false), i, 1)); J$.X1(2385, J$.C(80, J$.B(74, '<', J$.R(1569, 'i', i, 0), J$.G(1593, J$.G(1585, J$.R(1577, 'node', node, 0), 'params', 0), 'length', 0), 0))); J$.X1(2393, J$.B(98, '-', i = J$.W(1617, 'i', J$.B(90, '+', J$.U(82, '+', J$.R(1609, 'i', i, 0)), J$.T(1601, 1, 22, false), 0), i, 0), J$.T(1625, 1, 22, false), 0))) {
                                                        var param = J$.X1(1673, J$.W(1665, 'param', J$.G(1657, J$.G(1641, J$.R(1633, 'node', node, 0), 'params', 0), J$.R(1649, 'i', i, 0), 4), param, 1));
                                                        J$.X1(1705, J$.P(1697, J$.R(1681, 'param', param, 0), 'optional', J$.T(1689, false, 23, false), 0));
                                                    }
                                                } catch (J$e) {
                                                    J$.Ex(2401, J$e);
                                                } finally {
                                                    if (J$.Fr(2409))
                                                        continue jalangiLabel10;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false, 1713),
                                    TypeCastExpression: J$.T(1937, function TypeCastExpression(path) {
                                        jalangiLabel11:
                                            while (true) {
                                                try {
                                                    J$.Fe(1897, arguments.callee, this, arguments);
                                                    arguments = J$.N(1905, 'arguments', arguments, 4);
                                                    TypeCastExpression = J$.N(1913, 'TypeCastExpression', TypeCastExpression, 0);
                                                    path = J$.N(1921, 'path', path, 4);
                                                    J$.N(1929, 'node', node, 0);
                                                    var node = J$.X1(1801, J$.W(1793, 'node', J$.G(1785, J$.R(1777, 'path', path, 0), 'node', 0), node, 1));
                                                    do {
                                                        J$.X1(1833, node = J$.W(1825, 'node', J$.G(1817, J$.R(1809, 'node', node, 0), 'expression', 0), node, 0));
                                                    } while (J$.X1(2417, J$.C(88, J$.M(1857, J$.R(1841, 't', t, 0), 'isTypeCastExpression', 0)(J$.R(1849, 'node', node, 0)))));
                                                    J$.X1(1889, J$.M(1881, J$.R(1865, 'path', path, 0), 'replaceWith', 0)(J$.R(1873, 'node', node, 0)));
                                                } catch (J$e) {
                                                    J$.Ex(2425, J$e);
                                                } finally {
                                                    if (J$.Fr(2433))
                                                        continue jalangiLabel11;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false, 1897)
                                }, 11, false)
                            }, 11, false)));
                        } catch (J$e) {
                            J$.Ex(2441, J$e);
                        } finally {
                            if (J$.Fr(2449))
                                continue jalangiLabel12;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1977), 0));
            J$.X1(2169, J$.P(2161, J$.R(2129, 'module', module, 2), 'exports', J$.G(2153, J$.R(2137, 'exports', exports, 2), J$.T(2145, "default", 21, false), 4), 0));
        } catch (J$e) {
            J$.Ex(2481, J$e);
        } finally {
            if (J$.Sr(2489)) {
                J$.L();
                continue jalangiLabel14;
            } else {
                J$.L();
                break jalangiLabel14;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
